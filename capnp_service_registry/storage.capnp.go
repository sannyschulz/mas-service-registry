// Code generated by capnpc-go. DO NOT EDIT.

package capnp_service_registry

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

type SturdyRefStored capnp.Struct

// SturdyRefStored_TypeID is the unique identifier for the type SturdyRefStored.
const SturdyRefStored_TypeID = 0xd0e34e1c95c7ef43

func NewSturdyRefStored(s *capnp.Segment) (SturdyRefStored, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SturdyRefStored(st), err
}

func NewRootSturdyRefStored(s *capnp.Segment) (SturdyRefStored, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SturdyRefStored(st), err
}

func ReadRootSturdyRefStored(msg *capnp.Message) (SturdyRefStored, error) {
	root, err := msg.Root()
	return SturdyRefStored(root.Struct()), err
}

func (s SturdyRefStored) String() string {
	str, _ := text.Marshal(0xd0e34e1c95c7ef43, capnp.Struct(s))
	return str
}

func (s SturdyRefStored) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SturdyRefStored) DecodeFromPtr(p capnp.Ptr) SturdyRefStored {
	return SturdyRefStored(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SturdyRefStored) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SturdyRefStored) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SturdyRefStored) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SturdyRefStored) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SturdyRefStored) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s SturdyRefStored) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SturdyRefStored) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s SturdyRefStored) ServiceID() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s SturdyRefStored) HasServiceID() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s SturdyRefStored) ServiceIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetServiceID(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s SturdyRefStored) Payload() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s SturdyRefStored) HasPayload() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s SturdyRefStored) PayloadBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetPayload(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s SturdyRefStored) Usersignature() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s SturdyRefStored) HasUsersignature() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s SturdyRefStored) UsersignatureBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetUsersignature(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

// SturdyRefStored_List is a list of SturdyRefStored.
type SturdyRefStored_List = capnp.StructList[SturdyRefStored]

// NewSturdyRefStored creates a new list of SturdyRefStored.
func NewSturdyRefStored_List(s *capnp.Segment, sz int32) (SturdyRefStored_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return capnp.StructList[SturdyRefStored](l), err
}

// SturdyRefStored_Future is a wrapper for a SturdyRefStored promised by a client call.
type SturdyRefStored_Future struct{ *capnp.Future }

func (f SturdyRefStored_Future) Struct() (SturdyRefStored, error) {
	p, err := f.Future.Ptr()
	return SturdyRefStored(p.Struct()), err
}

type StorageEditor capnp.Client

// StorageEditor_TypeID is the unique identifier for the type StorageEditor.
const StorageEditor_TypeID = 0x9770dabea2ed8eec

func (c StorageEditor) AddSturdyRef(ctx context.Context, params func(StorageEditor_addSturdyRef_Params) error) (StorageEditor_addSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "addSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_addSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_addSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) GetSturdyRef(ctx context.Context, params func(StorageEditor_getSturdyRef_Params) error) (StorageEditor_getSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      1,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "getSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_getSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_getSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) ListSturdyRefsForUser(ctx context.Context, params func(StorageEditor_listSturdyRefsForUser_Params) error) (StorageEditor_listSturdyRefsForUser_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      2,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listSturdyRefsForUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_listSturdyRefsForUser_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_listSturdyRefsForUser_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) ListAllSturdyRefs(ctx context.Context, params func(StorageEditor_listAllSturdyRefs_Params) error) (StorageEditor_listAllSturdyRefs_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      3,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listAllSturdyRefs",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_listAllSturdyRefs_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_listAllSturdyRefs_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) DeleteSturdyRef(ctx context.Context, params func(StorageEditor_deleteSturdyRef_Params) error) (StorageEditor_deleteSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      4,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "deleteSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_deleteSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_deleteSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c StorageEditor) String() string {
	return "StorageEditor(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c StorageEditor) AddRef() StorageEditor {
	return StorageEditor(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c StorageEditor) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c StorageEditor) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c StorageEditor) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (StorageEditor) DecodeFromPtr(p capnp.Ptr) StorageEditor {
	return StorageEditor(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c StorageEditor) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c StorageEditor) IsSame(other StorageEditor) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c StorageEditor) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c StorageEditor) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A StorageEditor_Server is a StorageEditor with a local implementation.
type StorageEditor_Server interface {
	AddSturdyRef(context.Context, StorageEditor_addSturdyRef) error

	GetSturdyRef(context.Context, StorageEditor_getSturdyRef) error

	ListSturdyRefsForUser(context.Context, StorageEditor_listSturdyRefsForUser) error

	ListAllSturdyRefs(context.Context, StorageEditor_listAllSturdyRefs) error

	DeleteSturdyRef(context.Context, StorageEditor_deleteSturdyRef) error
}

// StorageEditor_NewServer creates a new Server from an implementation of StorageEditor_Server.
func StorageEditor_NewServer(s StorageEditor_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(StorageEditor_Methods(nil, s), s, c)
}

// StorageEditor_ServerToClient creates a new Client from an implementation of StorageEditor_Server.
// The caller is responsible for calling Release on the returned Client.
func StorageEditor_ServerToClient(s StorageEditor_Server) StorageEditor {
	return StorageEditor(capnp.NewClient(StorageEditor_NewServer(s)))
}

// StorageEditor_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func StorageEditor_Methods(methods []server.Method, s StorageEditor_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "addSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddSturdyRef(ctx, StorageEditor_addSturdyRef{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      1,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "getSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSturdyRef(ctx, StorageEditor_getSturdyRef{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      2,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listSturdyRefsForUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListSturdyRefsForUser(ctx, StorageEditor_listSturdyRefsForUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      3,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listAllSturdyRefs",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListAllSturdyRefs(ctx, StorageEditor_listAllSturdyRefs{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      4,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "deleteSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteSturdyRef(ctx, StorageEditor_deleteSturdyRef{call})
		},
	})

	return methods
}

// StorageEditor_addSturdyRef holds the state for a server call to StorageEditor.addSturdyRef.
// See server.Call for documentation.
type StorageEditor_addSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_addSturdyRef) Args() StorageEditor_addSturdyRef_Params {
	return StorageEditor_addSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_addSturdyRef) AllocResults() (StorageEditor_addSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(r), err
}

// StorageEditor_getSturdyRef holds the state for a server call to StorageEditor.getSturdyRef.
// See server.Call for documentation.
type StorageEditor_getSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_getSturdyRef) Args() StorageEditor_getSturdyRef_Params {
	return StorageEditor_getSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_getSturdyRef) AllocResults() (StorageEditor_getSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(r), err
}

// StorageEditor_listSturdyRefsForUser holds the state for a server call to StorageEditor.listSturdyRefsForUser.
// See server.Call for documentation.
type StorageEditor_listSturdyRefsForUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_listSturdyRefsForUser) Args() StorageEditor_listSturdyRefsForUser_Params {
	return StorageEditor_listSturdyRefsForUser_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_listSturdyRefsForUser) AllocResults() (StorageEditor_listSturdyRefsForUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(r), err
}

// StorageEditor_listAllSturdyRefs holds the state for a server call to StorageEditor.listAllSturdyRefs.
// See server.Call for documentation.
type StorageEditor_listAllSturdyRefs struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_listAllSturdyRefs) Args() StorageEditor_listAllSturdyRefs_Params {
	return StorageEditor_listAllSturdyRefs_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_listAllSturdyRefs) AllocResults() (StorageEditor_listAllSturdyRefs_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(r), err
}

// StorageEditor_deleteSturdyRef holds the state for a server call to StorageEditor.deleteSturdyRef.
// See server.Call for documentation.
type StorageEditor_deleteSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_deleteSturdyRef) Args() StorageEditor_deleteSturdyRef_Params {
	return StorageEditor_deleteSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_deleteSturdyRef) AllocResults() (StorageEditor_deleteSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(r), err
}

// StorageEditor_List is a list of StorageEditor.
type StorageEditor_List = capnp.CapList[StorageEditor]

// NewStorageEditor_List creates a new list of StorageEditor.
func NewStorageEditor_List(s *capnp.Segment, sz int32) (StorageEditor_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[StorageEditor](l), err
}

type StorageEditor_addSturdyRef_Params capnp.Struct

// StorageEditor_addSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_addSturdyRef_Params.
const StorageEditor_addSturdyRef_Params_TypeID = 0x9ce5db24f2e15533

func NewStorageEditor_addSturdyRef_Params(s *capnp.Segment) (StorageEditor_addSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_addSturdyRef_Params(st), err
}

func NewRootStorageEditor_addSturdyRef_Params(s *capnp.Segment) (StorageEditor_addSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_addSturdyRef_Params(st), err
}

func ReadRootStorageEditor_addSturdyRef_Params(msg *capnp.Message) (StorageEditor_addSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_addSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_addSturdyRef_Params) String() string {
	str, _ := text.Marshal(0x9ce5db24f2e15533, capnp.Struct(s))
	return str
}

func (s StorageEditor_addSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_addSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_addSturdyRef_Params {
	return StorageEditor_addSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_addSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_addSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_addSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_addSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_addSturdyRef_Params) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageEditor_addSturdyRef_Params) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_addSturdyRef_Params) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageEditor_addSturdyRef_Params) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageEditor_addSturdyRef_Params_List is a list of StorageEditor_addSturdyRef_Params.
type StorageEditor_addSturdyRef_Params_List = capnp.StructList[StorageEditor_addSturdyRef_Params]

// NewStorageEditor_addSturdyRef_Params creates a new list of StorageEditor_addSturdyRef_Params.
func NewStorageEditor_addSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_addSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_addSturdyRef_Params](l), err
}

// StorageEditor_addSturdyRef_Params_Future is a wrapper for a StorageEditor_addSturdyRef_Params promised by a client call.
type StorageEditor_addSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_addSturdyRef_Params_Future) Struct() (StorageEditor_addSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_addSturdyRef_Params(p.Struct()), err
}
func (p StorageEditor_addSturdyRef_Params_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

type StorageEditor_addSturdyRef_Results capnp.Struct

// StorageEditor_addSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_addSturdyRef_Results.
const StorageEditor_addSturdyRef_Results_TypeID = 0xcdd7d69aee2dada4

func NewStorageEditor_addSturdyRef_Results(s *capnp.Segment) (StorageEditor_addSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(st), err
}

func NewRootStorageEditor_addSturdyRef_Results(s *capnp.Segment) (StorageEditor_addSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(st), err
}

func ReadRootStorageEditor_addSturdyRef_Results(msg *capnp.Message) (StorageEditor_addSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_addSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_addSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xcdd7d69aee2dada4, capnp.Struct(s))
	return str
}

func (s StorageEditor_addSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_addSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_addSturdyRef_Results {
	return StorageEditor_addSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_addSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_addSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_addSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_addSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_addSturdyRef_Results_List is a list of StorageEditor_addSturdyRef_Results.
type StorageEditor_addSturdyRef_Results_List = capnp.StructList[StorageEditor_addSturdyRef_Results]

// NewStorageEditor_addSturdyRef_Results creates a new list of StorageEditor_addSturdyRef_Results.
func NewStorageEditor_addSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_addSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_addSturdyRef_Results](l), err
}

// StorageEditor_addSturdyRef_Results_Future is a wrapper for a StorageEditor_addSturdyRef_Results promised by a client call.
type StorageEditor_addSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_addSturdyRef_Results_Future) Struct() (StorageEditor_addSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_addSturdyRef_Results(p.Struct()), err
}

type StorageEditor_getSturdyRef_Params capnp.Struct

// StorageEditor_getSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_getSturdyRef_Params.
const StorageEditor_getSturdyRef_Params_TypeID = 0x968c9bfbc19ef7b4

func NewStorageEditor_getSturdyRef_Params(s *capnp.Segment) (StorageEditor_getSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Params(st), err
}

func NewRootStorageEditor_getSturdyRef_Params(s *capnp.Segment) (StorageEditor_getSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Params(st), err
}

func ReadRootStorageEditor_getSturdyRef_Params(msg *capnp.Message) (StorageEditor_getSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_getSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_getSturdyRef_Params) String() string {
	str, _ := text.Marshal(0x968c9bfbc19ef7b4, capnp.Struct(s))
	return str
}

func (s StorageEditor_getSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_getSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_getSturdyRef_Params {
	return StorageEditor_getSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_getSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_getSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_getSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_getSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_getSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_getSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_getSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_getSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_getSturdyRef_Params_List is a list of StorageEditor_getSturdyRef_Params.
type StorageEditor_getSturdyRef_Params_List = capnp.StructList[StorageEditor_getSturdyRef_Params]

// NewStorageEditor_getSturdyRef_Params creates a new list of StorageEditor_getSturdyRef_Params.
func NewStorageEditor_getSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_getSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_getSturdyRef_Params](l), err
}

// StorageEditor_getSturdyRef_Params_Future is a wrapper for a StorageEditor_getSturdyRef_Params promised by a client call.
type StorageEditor_getSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_getSturdyRef_Params_Future) Struct() (StorageEditor_getSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_getSturdyRef_Params(p.Struct()), err
}

type StorageEditor_getSturdyRef_Results capnp.Struct

// StorageEditor_getSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_getSturdyRef_Results.
const StorageEditor_getSturdyRef_Results_TypeID = 0xe509643d47807c2d

func NewStorageEditor_getSturdyRef_Results(s *capnp.Segment) (StorageEditor_getSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(st), err
}

func NewRootStorageEditor_getSturdyRef_Results(s *capnp.Segment) (StorageEditor_getSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(st), err
}

func ReadRootStorageEditor_getSturdyRef_Results(msg *capnp.Message) (StorageEditor_getSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_getSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_getSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xe509643d47807c2d, capnp.Struct(s))
	return str
}

func (s StorageEditor_getSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_getSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_getSturdyRef_Results {
	return StorageEditor_getSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_getSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_getSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_getSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_getSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_getSturdyRef_Results) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageEditor_getSturdyRef_Results) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_getSturdyRef_Results) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageEditor_getSturdyRef_Results) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageEditor_getSturdyRef_Results_List is a list of StorageEditor_getSturdyRef_Results.
type StorageEditor_getSturdyRef_Results_List = capnp.StructList[StorageEditor_getSturdyRef_Results]

// NewStorageEditor_getSturdyRef_Results creates a new list of StorageEditor_getSturdyRef_Results.
func NewStorageEditor_getSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_getSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_getSturdyRef_Results](l), err
}

// StorageEditor_getSturdyRef_Results_Future is a wrapper for a StorageEditor_getSturdyRef_Results promised by a client call.
type StorageEditor_getSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_getSturdyRef_Results_Future) Struct() (StorageEditor_getSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_getSturdyRef_Results(p.Struct()), err
}
func (p StorageEditor_getSturdyRef_Results_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

type StorageEditor_listSturdyRefsForUser_Params capnp.Struct

// StorageEditor_listSturdyRefsForUser_Params_TypeID is the unique identifier for the type StorageEditor_listSturdyRefsForUser_Params.
const StorageEditor_listSturdyRefsForUser_Params_TypeID = 0xadb20e7070609f45

func NewStorageEditor_listSturdyRefsForUser_Params(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Params(st), err
}

func NewRootStorageEditor_listSturdyRefsForUser_Params(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Params(st), err
}

func ReadRootStorageEditor_listSturdyRefsForUser_Params(msg *capnp.Message) (StorageEditor_listSturdyRefsForUser_Params, error) {
	root, err := msg.Root()
	return StorageEditor_listSturdyRefsForUser_Params(root.Struct()), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) String() string {
	str, _ := text.Marshal(0xadb20e7070609f45, capnp.Struct(s))
	return str
}

func (s StorageEditor_listSturdyRefsForUser_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listSturdyRefsForUser_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_listSturdyRefsForUser_Params {
	return StorageEditor_listSturdyRefsForUser_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listSturdyRefsForUser_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listSturdyRefsForUser_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listSturdyRefsForUser_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listSturdyRefsForUser_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listSturdyRefsForUser_Params) Usersignature() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) HasUsersignature() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listSturdyRefsForUser_Params) UsersignatureBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) SetUsersignature(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_listSturdyRefsForUser_Params_List is a list of StorageEditor_listSturdyRefsForUser_Params.
type StorageEditor_listSturdyRefsForUser_Params_List = capnp.StructList[StorageEditor_listSturdyRefsForUser_Params]

// NewStorageEditor_listSturdyRefsForUser_Params creates a new list of StorageEditor_listSturdyRefsForUser_Params.
func NewStorageEditor_listSturdyRefsForUser_Params_List(s *capnp.Segment, sz int32) (StorageEditor_listSturdyRefsForUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listSturdyRefsForUser_Params](l), err
}

// StorageEditor_listSturdyRefsForUser_Params_Future is a wrapper for a StorageEditor_listSturdyRefsForUser_Params promised by a client call.
type StorageEditor_listSturdyRefsForUser_Params_Future struct{ *capnp.Future }

func (f StorageEditor_listSturdyRefsForUser_Params_Future) Struct() (StorageEditor_listSturdyRefsForUser_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listSturdyRefsForUser_Params(p.Struct()), err
}

type StorageEditor_listSturdyRefsForUser_Results capnp.Struct

// StorageEditor_listSturdyRefsForUser_Results_TypeID is the unique identifier for the type StorageEditor_listSturdyRefsForUser_Results.
const StorageEditor_listSturdyRefsForUser_Results_TypeID = 0xfa55621a4bbb397a

func NewStorageEditor_listSturdyRefsForUser_Results(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(st), err
}

func NewRootStorageEditor_listSturdyRefsForUser_Results(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(st), err
}

func ReadRootStorageEditor_listSturdyRefsForUser_Results(msg *capnp.Message) (StorageEditor_listSturdyRefsForUser_Results, error) {
	root, err := msg.Root()
	return StorageEditor_listSturdyRefsForUser_Results(root.Struct()), err
}

func (s StorageEditor_listSturdyRefsForUser_Results) String() string {
	str, _ := text.Marshal(0xfa55621a4bbb397a, capnp.Struct(s))
	return str
}

func (s StorageEditor_listSturdyRefsForUser_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listSturdyRefsForUser_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_listSturdyRefsForUser_Results {
	return StorageEditor_listSturdyRefsForUser_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listSturdyRefsForUser_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listSturdyRefsForUser_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listSturdyRefsForUser_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listSturdyRefsForUser_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listSturdyRefsForUser_Results) Sturdyrefs() (SturdyRefStored_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored_List(p.List()), err
}

func (s StorageEditor_listSturdyRefsForUser_Results) HasSturdyrefs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listSturdyRefsForUser_Results) SetSturdyrefs(v SturdyRefStored_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSturdyrefs sets the sturdyrefs field to a newly
// allocated SturdyRefStored_List, preferring placement in s's segment.
func (s StorageEditor_listSturdyRefsForUser_Results) NewSturdyrefs(n int32) (SturdyRefStored_List, error) {
	l, err := NewSturdyRefStored_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return SturdyRefStored_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// StorageEditor_listSturdyRefsForUser_Results_List is a list of StorageEditor_listSturdyRefsForUser_Results.
type StorageEditor_listSturdyRefsForUser_Results_List = capnp.StructList[StorageEditor_listSturdyRefsForUser_Results]

// NewStorageEditor_listSturdyRefsForUser_Results creates a new list of StorageEditor_listSturdyRefsForUser_Results.
func NewStorageEditor_listSturdyRefsForUser_Results_List(s *capnp.Segment, sz int32) (StorageEditor_listSturdyRefsForUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listSturdyRefsForUser_Results](l), err
}

// StorageEditor_listSturdyRefsForUser_Results_Future is a wrapper for a StorageEditor_listSturdyRefsForUser_Results promised by a client call.
type StorageEditor_listSturdyRefsForUser_Results_Future struct{ *capnp.Future }

func (f StorageEditor_listSturdyRefsForUser_Results_Future) Struct() (StorageEditor_listSturdyRefsForUser_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listSturdyRefsForUser_Results(p.Struct()), err
}

type StorageEditor_listAllSturdyRefs_Params capnp.Struct

// StorageEditor_listAllSturdyRefs_Params_TypeID is the unique identifier for the type StorageEditor_listAllSturdyRefs_Params.
const StorageEditor_listAllSturdyRefs_Params_TypeID = 0xa518a153042139c8

func NewStorageEditor_listAllSturdyRefs_Params(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_listAllSturdyRefs_Params(st), err
}

func NewRootStorageEditor_listAllSturdyRefs_Params(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_listAllSturdyRefs_Params(st), err
}

func ReadRootStorageEditor_listAllSturdyRefs_Params(msg *capnp.Message) (StorageEditor_listAllSturdyRefs_Params, error) {
	root, err := msg.Root()
	return StorageEditor_listAllSturdyRefs_Params(root.Struct()), err
}

func (s StorageEditor_listAllSturdyRefs_Params) String() string {
	str, _ := text.Marshal(0xa518a153042139c8, capnp.Struct(s))
	return str
}

func (s StorageEditor_listAllSturdyRefs_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listAllSturdyRefs_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_listAllSturdyRefs_Params {
	return StorageEditor_listAllSturdyRefs_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listAllSturdyRefs_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listAllSturdyRefs_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listAllSturdyRefs_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listAllSturdyRefs_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_listAllSturdyRefs_Params_List is a list of StorageEditor_listAllSturdyRefs_Params.
type StorageEditor_listAllSturdyRefs_Params_List = capnp.StructList[StorageEditor_listAllSturdyRefs_Params]

// NewStorageEditor_listAllSturdyRefs_Params creates a new list of StorageEditor_listAllSturdyRefs_Params.
func NewStorageEditor_listAllSturdyRefs_Params_List(s *capnp.Segment, sz int32) (StorageEditor_listAllSturdyRefs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_listAllSturdyRefs_Params](l), err
}

// StorageEditor_listAllSturdyRefs_Params_Future is a wrapper for a StorageEditor_listAllSturdyRefs_Params promised by a client call.
type StorageEditor_listAllSturdyRefs_Params_Future struct{ *capnp.Future }

func (f StorageEditor_listAllSturdyRefs_Params_Future) Struct() (StorageEditor_listAllSturdyRefs_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listAllSturdyRefs_Params(p.Struct()), err
}

type StorageEditor_listAllSturdyRefs_Results capnp.Struct

// StorageEditor_listAllSturdyRefs_Results_TypeID is the unique identifier for the type StorageEditor_listAllSturdyRefs_Results.
const StorageEditor_listAllSturdyRefs_Results_TypeID = 0x9248a5211394ad54

func NewStorageEditor_listAllSturdyRefs_Results(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(st), err
}

func NewRootStorageEditor_listAllSturdyRefs_Results(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(st), err
}

func ReadRootStorageEditor_listAllSturdyRefs_Results(msg *capnp.Message) (StorageEditor_listAllSturdyRefs_Results, error) {
	root, err := msg.Root()
	return StorageEditor_listAllSturdyRefs_Results(root.Struct()), err
}

func (s StorageEditor_listAllSturdyRefs_Results) String() string {
	str, _ := text.Marshal(0x9248a5211394ad54, capnp.Struct(s))
	return str
}

func (s StorageEditor_listAllSturdyRefs_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listAllSturdyRefs_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_listAllSturdyRefs_Results {
	return StorageEditor_listAllSturdyRefs_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listAllSturdyRefs_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listAllSturdyRefs_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listAllSturdyRefs_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listAllSturdyRefs_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listAllSturdyRefs_Results) Sturdyrefs() (SturdyRefStored_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored_List(p.List()), err
}

func (s StorageEditor_listAllSturdyRefs_Results) HasSturdyrefs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listAllSturdyRefs_Results) SetSturdyrefs(v SturdyRefStored_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSturdyrefs sets the sturdyrefs field to a newly
// allocated SturdyRefStored_List, preferring placement in s's segment.
func (s StorageEditor_listAllSturdyRefs_Results) NewSturdyrefs(n int32) (SturdyRefStored_List, error) {
	l, err := NewSturdyRefStored_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return SturdyRefStored_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// StorageEditor_listAllSturdyRefs_Results_List is a list of StorageEditor_listAllSturdyRefs_Results.
type StorageEditor_listAllSturdyRefs_Results_List = capnp.StructList[StorageEditor_listAllSturdyRefs_Results]

// NewStorageEditor_listAllSturdyRefs_Results creates a new list of StorageEditor_listAllSturdyRefs_Results.
func NewStorageEditor_listAllSturdyRefs_Results_List(s *capnp.Segment, sz int32) (StorageEditor_listAllSturdyRefs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listAllSturdyRefs_Results](l), err
}

// StorageEditor_listAllSturdyRefs_Results_Future is a wrapper for a StorageEditor_listAllSturdyRefs_Results promised by a client call.
type StorageEditor_listAllSturdyRefs_Results_Future struct{ *capnp.Future }

func (f StorageEditor_listAllSturdyRefs_Results_Future) Struct() (StorageEditor_listAllSturdyRefs_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listAllSturdyRefs_Results(p.Struct()), err
}

type StorageEditor_deleteSturdyRef_Params capnp.Struct

// StorageEditor_deleteSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_deleteSturdyRef_Params.
const StorageEditor_deleteSturdyRef_Params_TypeID = 0xf4b2adaeac2fc134

func NewStorageEditor_deleteSturdyRef_Params(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_deleteSturdyRef_Params(st), err
}

func NewRootStorageEditor_deleteSturdyRef_Params(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_deleteSturdyRef_Params(st), err
}

func ReadRootStorageEditor_deleteSturdyRef_Params(msg *capnp.Message) (StorageEditor_deleteSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_deleteSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_deleteSturdyRef_Params) String() string {
	str, _ := text.Marshal(0xf4b2adaeac2fc134, capnp.Struct(s))
	return str
}

func (s StorageEditor_deleteSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_deleteSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_deleteSturdyRef_Params {
	return StorageEditor_deleteSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_deleteSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_deleteSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_deleteSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_deleteSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_deleteSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_deleteSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_deleteSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_deleteSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_deleteSturdyRef_Params_List is a list of StorageEditor_deleteSturdyRef_Params.
type StorageEditor_deleteSturdyRef_Params_List = capnp.StructList[StorageEditor_deleteSturdyRef_Params]

// NewStorageEditor_deleteSturdyRef_Params creates a new list of StorageEditor_deleteSturdyRef_Params.
func NewStorageEditor_deleteSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_deleteSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_deleteSturdyRef_Params](l), err
}

// StorageEditor_deleteSturdyRef_Params_Future is a wrapper for a StorageEditor_deleteSturdyRef_Params promised by a client call.
type StorageEditor_deleteSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_deleteSturdyRef_Params_Future) Struct() (StorageEditor_deleteSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_deleteSturdyRef_Params(p.Struct()), err
}

type StorageEditor_deleteSturdyRef_Results capnp.Struct

// StorageEditor_deleteSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_deleteSturdyRef_Results.
const StorageEditor_deleteSturdyRef_Results_TypeID = 0x8bfbf4be38627800

func NewStorageEditor_deleteSturdyRef_Results(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(st), err
}

func NewRootStorageEditor_deleteSturdyRef_Results(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(st), err
}

func ReadRootStorageEditor_deleteSturdyRef_Results(msg *capnp.Message) (StorageEditor_deleteSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_deleteSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_deleteSturdyRef_Results) String() string {
	str, _ := text.Marshal(0x8bfbf4be38627800, capnp.Struct(s))
	return str
}

func (s StorageEditor_deleteSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_deleteSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_deleteSturdyRef_Results {
	return StorageEditor_deleteSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_deleteSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_deleteSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_deleteSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_deleteSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_deleteSturdyRef_Results_List is a list of StorageEditor_deleteSturdyRef_Results.
type StorageEditor_deleteSturdyRef_Results_List = capnp.StructList[StorageEditor_deleteSturdyRef_Results]

// NewStorageEditor_deleteSturdyRef_Results creates a new list of StorageEditor_deleteSturdyRef_Results.
func NewStorageEditor_deleteSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_deleteSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_deleteSturdyRef_Results](l), err
}

// StorageEditor_deleteSturdyRef_Results_Future is a wrapper for a StorageEditor_deleteSturdyRef_Results promised by a client call.
type StorageEditor_deleteSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_deleteSturdyRef_Results_Future) Struct() (StorageEditor_deleteSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_deleteSturdyRef_Results(p.Struct()), err
}

type StorageReader capnp.Client

// StorageReader_TypeID is the unique identifier for the type StorageReader.
const StorageReader_TypeID = 0xeb1ed22a5561aae3

func (c StorageReader) GetSturdyRef(ctx context.Context, params func(StorageReader_getSturdyRef_Params) error) (StorageReader_getSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xeb1ed22a5561aae3,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageReader",
			MethodName:    "getSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageReader_getSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageReader_getSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageReader) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c StorageReader) String() string {
	return "StorageReader(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c StorageReader) AddRef() StorageReader {
	return StorageReader(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c StorageReader) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c StorageReader) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c StorageReader) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (StorageReader) DecodeFromPtr(p capnp.Ptr) StorageReader {
	return StorageReader(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c StorageReader) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c StorageReader) IsSame(other StorageReader) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c StorageReader) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c StorageReader) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A StorageReader_Server is a StorageReader with a local implementation.
type StorageReader_Server interface {
	GetSturdyRef(context.Context, StorageReader_getSturdyRef) error
}

// StorageReader_NewServer creates a new Server from an implementation of StorageReader_Server.
func StorageReader_NewServer(s StorageReader_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(StorageReader_Methods(nil, s), s, c)
}

// StorageReader_ServerToClient creates a new Client from an implementation of StorageReader_Server.
// The caller is responsible for calling Release on the returned Client.
func StorageReader_ServerToClient(s StorageReader_Server) StorageReader {
	return StorageReader(capnp.NewClient(StorageReader_NewServer(s)))
}

// StorageReader_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func StorageReader_Methods(methods []server.Method, s StorageReader_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xeb1ed22a5561aae3,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageReader",
			MethodName:    "getSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSturdyRef(ctx, StorageReader_getSturdyRef{call})
		},
	})

	return methods
}

// StorageReader_getSturdyRef holds the state for a server call to StorageReader.getSturdyRef.
// See server.Call for documentation.
type StorageReader_getSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageReader_getSturdyRef) Args() StorageReader_getSturdyRef_Params {
	return StorageReader_getSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageReader_getSturdyRef) AllocResults() (StorageReader_getSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(r), err
}

// StorageReader_List is a list of StorageReader.
type StorageReader_List = capnp.CapList[StorageReader]

// NewStorageReader_List creates a new list of StorageReader.
func NewStorageReader_List(s *capnp.Segment, sz int32) (StorageReader_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[StorageReader](l), err
}

type StorageReader_getSturdyRef_Params capnp.Struct

// StorageReader_getSturdyRef_Params_TypeID is the unique identifier for the type StorageReader_getSturdyRef_Params.
const StorageReader_getSturdyRef_Params_TypeID = 0xa478d6877d52b582

func NewStorageReader_getSturdyRef_Params(s *capnp.Segment) (StorageReader_getSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Params(st), err
}

func NewRootStorageReader_getSturdyRef_Params(s *capnp.Segment) (StorageReader_getSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Params(st), err
}

func ReadRootStorageReader_getSturdyRef_Params(msg *capnp.Message) (StorageReader_getSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageReader_getSturdyRef_Params(root.Struct()), err
}

func (s StorageReader_getSturdyRef_Params) String() string {
	str, _ := text.Marshal(0xa478d6877d52b582, capnp.Struct(s))
	return str
}

func (s StorageReader_getSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageReader_getSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageReader_getSturdyRef_Params {
	return StorageReader_getSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageReader_getSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageReader_getSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageReader_getSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageReader_getSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageReader_getSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageReader_getSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageReader_getSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageReader_getSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageReader_getSturdyRef_Params_List is a list of StorageReader_getSturdyRef_Params.
type StorageReader_getSturdyRef_Params_List = capnp.StructList[StorageReader_getSturdyRef_Params]

// NewStorageReader_getSturdyRef_Params creates a new list of StorageReader_getSturdyRef_Params.
func NewStorageReader_getSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageReader_getSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageReader_getSturdyRef_Params](l), err
}

// StorageReader_getSturdyRef_Params_Future is a wrapper for a StorageReader_getSturdyRef_Params promised by a client call.
type StorageReader_getSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageReader_getSturdyRef_Params_Future) Struct() (StorageReader_getSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageReader_getSturdyRef_Params(p.Struct()), err
}

type StorageReader_getSturdyRef_Results capnp.Struct

// StorageReader_getSturdyRef_Results_TypeID is the unique identifier for the type StorageReader_getSturdyRef_Results.
const StorageReader_getSturdyRef_Results_TypeID = 0xd0dff216087c0481

func NewStorageReader_getSturdyRef_Results(s *capnp.Segment) (StorageReader_getSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(st), err
}

func NewRootStorageReader_getSturdyRef_Results(s *capnp.Segment) (StorageReader_getSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(st), err
}

func ReadRootStorageReader_getSturdyRef_Results(msg *capnp.Message) (StorageReader_getSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageReader_getSturdyRef_Results(root.Struct()), err
}

func (s StorageReader_getSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xd0dff216087c0481, capnp.Struct(s))
	return str
}

func (s StorageReader_getSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageReader_getSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageReader_getSturdyRef_Results {
	return StorageReader_getSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageReader_getSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageReader_getSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageReader_getSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageReader_getSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageReader_getSturdyRef_Results) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageReader_getSturdyRef_Results) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageReader_getSturdyRef_Results) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageReader_getSturdyRef_Results) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageReader_getSturdyRef_Results_List is a list of StorageReader_getSturdyRef_Results.
type StorageReader_getSturdyRef_Results_List = capnp.StructList[StorageReader_getSturdyRef_Results]

// NewStorageReader_getSturdyRef_Results creates a new list of StorageReader_getSturdyRef_Results.
func NewStorageReader_getSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageReader_getSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageReader_getSturdyRef_Results](l), err
}

// StorageReader_getSturdyRef_Results_Future is a wrapper for a StorageReader_getSturdyRef_Results promised by a client call.
type StorageReader_getSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageReader_getSturdyRef_Results_Future) Struct() (StorageReader_getSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageReader_getSturdyRef_Results(p.Struct()), err
}
func (p StorageReader_getSturdyRef_Results_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

const schema_dca555fc76741dc1 = "x\xda\xacX}p\x14\xe5\x19\x7f\x9e\xdd\xbbl.\xc9" +
	"\xdd\xe5e\x83\xd5\x16L3\x03\x1d\xd2!TF\x19\x88" +
	"%\x93P\x831\xb6b\xf6\xc29\x833P7\xb97" +
	"\xe9\xe2%w\xecn\x08\xe7`\x858\xd2B\xabS(" +
	"\xd5B\xe9\x07\xd4L\x15K;d\x9a\x99*\xd5\x19:" +
	"\xad@'\x8c\x0eS\xe3\x08:\xd5XjiikS" +
	"[D\xd1\xed\xbc\xef\xde{\xb7\xb9\xdb\x0b\x89\xc3\x7fw" +
	"\xef>\xfb<\xcf\xfb{~\xcf\xd7\xdet\"\xd8\x12X" +
	"\x1a\x1e\x8c\x80\xa4=\x15,sF\xce]^#\xcd\xf9" +
	"\xfe6 \xb5\x08\x10D\x05\xe0\xe6:e\x02\x01\xd5e" +
	"J3\xa0s\xf2\xcd\xbfl\x9b7x\xf1\x11 7\"" +
	"@\x80=\x8f+#\x08\x81\x8f\xb7t\xadx\xe1\xbd\x0f" +
	"\xbfE\xe6\x89\xf3\xd5\xca!\x84\x80\xb3\xf6\xc8^\xb5n" +
	"\xf8\x8e=\xc0\x9f\xb8*\x97\xb1WP]\xcdU\xb6l" +
	"\xd8\xd8\xb1c\xe5\xbe\xbd\xae\xca\xa0\xc4\x042\xcaa&" +
	"\xb0S\x19\x04t\x94=w\xec\xdb\xb9\xfc7{\xbdN" +
	"]P\xce2\x81\x8f\xb8\x86_]\xfa\xd1\xf1\x0f\x7f\xf0" +
	"\xed\xc7\xbd&\xea\xca\x87\x98@C9\x13\xb8\xf8\xd8?" +
	"\x0e\xbdp6\xfd\x04\x90\x88\xec\x1c\x9foo\xbe\x12\x1f" +
	"~\x1d\x00U\xad|B]_\xce\xe4\xd7\x95\xb7\xa1\xda" +
	"\x14R\x00\x9c\x9b\xe3oM.8w\xfe\x80W\xdd\xc2" +
	"\x10W\xb74\xc4\xd4}\xaer\xd3\x95\xf1\xb2g\x7f\xe2" +
	"u(\x1e\xfa\x03\x130\xb8\x80z\xc5\xfcs\xe3\xc3#" +
	"\x07\xb9=\xfd\xba\xd1_\x7f\xea\xb5c\xaf2{\xbbC" +
	"\x93\xea\x0f\x99\x11u_\xa8M=\xc5\xcd\x0d\x8d\xc6\x1e" +
	"\xfc\xc6\xf8\x96'\xbd\xe6\x8e\xba\xe6\x9e\xe7\xda6<\xfa" +
	"\xd2\xdd\xef\x9e\xde1E\xe0\xad\xd0\x1e&\xf0o.p" +
	"\xb2\xb1.\xd0y\xf0\xfaa\xc8\x83?\xb7\xe20\x03\x7f" +
	"\xb9\xf3\xc5\x8b\x8bV\x9e\x1av=\xe5O\x82\xee\x93_" +
	"\xae\x1b{\xad\xad\xee\xa5\x9fy\xef\xf0\xdf\x10\x0fK\xb0" +
	"\x82)\xfd[\xd3w\x9fi\x0c\xdc\xfb\x8c\xd7j}\xc5" +
	".&\xd0\xc8\x05V\xff\xf8\xbet:2r\xc4+\xd0" +
	"W\xc1Q\xd8\xce\x05\xbe\xda:\x96<p\xc3\xd7\x8f\x02" +
	"\x89`\x1e\x85 \xf7b\xb8\xa2\x02\xd5\xd1\x0a\x86\xc4\xd1" +
	"\x8aw\x00\x9dCj\xed\xbb\xf3\xc7C\xa3^\x7f\xf6U" +
	"\xfe\x96i{\xba\x92i\xbb\xb4c\xd7\x0d\x8f\xdf\xfd\xdc" +
	"\x8b^s\xa7*9L\xafp\x81'\x8f4\xfcs\xff" +
	"\xf8\xab\xa7=(\\\xae\xdc\xc5\xee\xba=\xb0\xb5\xfc\xba" +
	"\xc9?\xbd\xec}\xf5B%\xbf\xcae\xfe\xeam\xff:" +
	"\xf1\xbdyk\xde~\x99{\x9a\xe3\x07\xf7T\x9d_5" +
	"\xa9\xd6W\xb1_\x0b\xab\x98\xa3\xed\x0f\xff46\xf6\xd7" +
	"\xdf\x9f-\xb8\x15\xa7m0|+\xaas\xc3L\x98\x84" +
	"\x19u\xdb\x86\xeeR\xc6\xca6\x9c\xcbr\x9b[\xde\x14" +
	"\xe6\xb7\xda\x1ef\x96\x8d\xf1\xf7\xbf\x93x\xf1\xe3sE" +
	"Ly:\xfc\x81:\xca5\x1d\x0d\x9fP\x9b\"\x8c)" +
	"\x13kW\xc4\x17\x7fv\xf9\x1b^m\x0b#\xcf\xf1\xec" +
	"\x8c0m\xbf\x0b\xd6\xbe\xbe\xfe\x8c\xfcf\x91\xb6xd" +
	"B\xd5\x99\x0eu}\xe4\x84z\x9ekk\xd8\xba\xad\xad" +
	")\x11:\xefE\xe5t\x84\xa3\xf2\x06\xd7\xf6\xd8\xb1\xb3" +
	"\xf7\xcf\xcd\\z\xc7+\x80\xd1\xfdL\x80D\x99\xc0\xdb" +
	"\x87\xf5\xf8\xe7\xcf\xdc\xf8\xf7\xa2\xb4Z\x16\x9dPWE" +
	"\x99\xb9\xa6h\x9bj\xb0_\xce-\xc7\xbf\xf0\xf3_\x1c" +
	"\x19y\xcf\xabMs\xb5\xe9\\\xdb\xd8\x1f#wV~" +
	"f\xe8\x7fE\xce?\x12\x9dTwsm\x8fF\xdb\xd4" +
	"g\xb9\xb6\xff<\xf1\xfc\xd2\xc5\x91\xe0\xfb^m\x07\xa3" +
	"\x9c|\xa3\\\xdb\x03\x8d\xc7\xbe\xfc\xe9\xae\xf8\x07^\x81" +
	"W\xa2g\x98\xc0\x05.p`|A\xe8\xe4S\xa7?" +
	"\xca\x0a\xf0\xf8\xcd\xaf\xe6\xa1i\xa8\x1e\x84\x15\x8e\x95\xd6" +
	"\x07\xfb\xa9\xb9\xa4\xac[O\xf7\xa7o\xed\xa4\xe6f\xa3" +
	"\x9b\xaeMuf\xcf{\xa9\x1d\xa3V*\xb9Y\xefJ" +
	"\xd2\x0e=\x93L\xe9\x89\x051j\x0d(I\xdb\xd2\x02" +
	"r\x00 \x80\x00$\xfc%\x00\xad\\F\xadF\xc2\x87" +
	"\xd2\xae\x1cV\x81\x84U\x809#\xc1)Fb\xb4\xd7" +
	"\xb0l3\xb3\xc4\xe4?\xa8\x99=_\x10\xa3\xb5\xd6@" +
	"\xd2\xb6\x1c\xcbN\x99z/\xcd\xbd\xe7\xfe]\x9d0\xec" +
	"\x94\xb9$A\x93\xd4\xa6\x9d\xf6\x80\x99\xc8\xc4hO\xce" +
	"\xa9\xe9\xdfJ\x1a\x96\xbd*\x99\xcc\xbdf\xe5\xacy/" +
	"s/\x80V%\xa3\xb6HB\xc7\xe2\xa2&\x05\xb9\xc7" +
	"\xc2\x08`\x87\x8cX\x9dO&@v8\xdb+v\xe8" +
	"QS\xef\xb3\xb4\xf2\x9c\xcd\xfa\x8d\x00\xda\"\x19\xb5[" +
	"$$\x885\xc8\x0e\x972T\x17\xcb\xa8\xad`\x8ed" +
	"c\x03\xd1\xd4\xfd\xb4_\x80\xfbP\xf6\x18\xe7\x04d@" +
	"\x9c\xe3\xf1eV1\xed\xd0M]\xee\x9b\x82\x82\x99E" +
	"\xe1zf<M\xbb\x8d\x1e\xa3\x1bju\xdbH\xf5\xe7" +
	"C;\x1d\xd8\xbd\xd4\xce\xc7\x87\x19\xe8\xb3\xc0k\xa0\xcb" +
	"k +\x08JO{k\x91z\xa9P\xbdb\xa7\xcc" +
	"\x0eD\xadF\x0ez\x9a\x19\x8a\xf2Hvo\x04\x89\xec" +
	"T0\xdf7Q\x94\x02\xf2 {6\xa0\xa0\x94\xab\xee" +
	"(\x12\x89\x18# \x11\xaa\xa0\x9c\xeb7(z;Y" +
	"\xb7\x07$\x12W0\x90Ks\x041\x10\xb4\x0f\x81D" +
	"V)\x8e\x9eH\xf0+C\x94]\xba\x05\x1d\x81A\xee" +
	"\x801\x90\x9d\xa0\xcb\xbf\xdbS\xb5f\xdc\xa2f\xf6\x09" +
	"\xe3&\x0a\xcc\xd0jAG\xf0\x1c\xb3\x87\xd0\x82\x1dx" +
	"\x15\xe0\x85\x17\xa5\x80\x8f\x15\x01oR\xc0\x9e\x02^W" +
	"\xcf\x8cK_16\xd3\xdb\xf4\xb4\xdee$\x0d;\xc3" +
	"\xf30i[0\xc5\xe0~\x00\xadZFm\x9e\x84\x8e" +
	"\xc9\xb9G\x13(^\x92\xed\x8c\x0f{\xa5\x82L\xb2j" +
	"\xd9[<\xe8\x01\x1et\xd1(P\xf4\x1fBX\x80\xc2" +
	"\x8a#\x9cB\xe1\x15f\xa6\x03-F\xf5\x04\xbd&l" +
	"\xf5-\x02\xf7\x18t0\xab>\x7f\xe0\x1a@\xabdT" +
	"\\\xd1v\xc0\xd6\x99\xe5Zqa\xcb\xd6\x98\x12^M" +
	"\x09\xe1T\xc7>\xd1k~e\xb4\xab\xf8B\xf7\x80b" +
	"\xd0A\x9fp\xfbb\xc6s\xc5=\xb1\xfc\x89u\xa7\xb7" +
	"Rg%\x01 _\xa8s\xf3\x99(\xd4Y\x10\xcbJ" +
	"\x81\x98G\xf0\xf6\x14\xcfL\xc1\x05(U\x1b\x07,j" +
	"ZFo?\xab\x8d\x03&-\xa2\x83<\xe5j\xad\xd4" +
	"\xea6\x8d4\xab\xa2\x00\x8c\xcd\xd59\xad:c\xc0}" +
	"2jIO\x0f0\x18\x8a_\x93Q\xb3%$\x92T" +
	"\x83\x12\x00\xd9\xc4\x0e\xd32j[%$\xb2\\\x832" +
	"\x00\xc9\xb0,\xdb*\xa3\xf6\xcdR\x04\x12\x1dD\xc9\xa4" +
	"i\xe1\xe9\x1aP\xf4\xbe\xa2\xd3V\x14\xee\xca\xde\xaa?" +
	"\xeb\xaa\xe0\x93O\xb3\x9f\x18\xfcXq\xb5D\xf5\xbf\xf2" +
	"\x8c\x8bg\x8et\xb3\xa8\x1d\xbeD\x9dE\xc9-\xecy" +
	"Y\xbd\x9d\xb5v\xca\xa4\x89\x02\xcat\xf9Q&\xe6G" +
	"\x19\x86wRFm\x8b\x872\x03\x8c\xc7\xb6\x8c\xda\xb6" +
	"\xd2E\xad\x98HE\xe1\x9aa\x06\xe4\xa7\x0eQ\xd5\x9b" +
	"\xe9\xa6\x01j\xd9\xecN\x9eQ(6\xc3QhZ\x9f" +
	"\xfc9\xea\xba0m\xe3\xba\xa6}km\xaa\xb3\xd9}" +
	"\xc0\xeeX\xc5\x1b\x97\xd8\x02Q\xac\xd8Dc\x8d\xeb." +
	"6\xad\x88]\x16\xc5\xeaJV=\x00\x12id\xd3\x8a" +
	"\xf8D\x80\xe2\x03\x06i8\x0c\x12\xa9/\xd1\xf0\x1cQ" +
	"\xa1\xa1\xd9M\x1d\xf7\x88#\x80b\xf6\x8b2\xcc\xb2\xcd" +
	"\xb1\xc4\x08[\x12\xb0f7\xf7J\xe5\xb4\xe9\xc6\x16\xab" +
	"\xf3\xdbd\xc1P!\x15f\xb72\xe8\xc5I,\xc3(" +
	"\xb6t\xa2\xb1\xc9\xad\x9d\xe1$>\x17\xa0\xd8\xdfH\x13" +
	"\xc3i\x19\xc3I,=(\xf6'R\xcfpZ\xa88" +
	"\xa2r@\x94\xd5\x8e\x99@\xd4I\xcd(sn\x06C" +
	"\xd75\xad\x01\xb3\x98$\xb8)\xf9\x13t^\xdf\xd9:" +
	"Fu%\xe1\x1d\xb3\xc4\x97\x1b\x14\x1f\x18\x08aQ\x08" +
	")E\xa3\xedU\x11*\\\xd9|v\x8e\x99\x0fY\x85" +
	"\xf3ao-_\xb5\xf2\x8e\x8bOn(>\xe7\x112" +
	"\xe4:.\xb61\xcc\xbe\x0cS\x13\xa0\xac\x04\xe8E\xe5" +
	"\xcb?\xca\xde\x1c\x10\xcb\x99O\x0e\xcc~\x0eq\xad\xe1" +
	"5\xdaTg~K\xd1b\xafV\xa1Y/\xb9IF" +
	"me\xa9\xf1\xc3\x7f\x87\xfc\x7f\x00\x00\x00\xff\xff\xa2\xbb" +
	"U\x90"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_dca555fc76741dc1,
		Nodes: []uint64{
			0x809812024ef9dbb2,
			0x85ec771c80e6e0c8,
			0x8bfbf4be38627800,
			0x9248a5211394ad54,
			0x94993c86506a5e40,
			0x94bc378999489207,
			0x968c9bfbc19ef7b4,
			0x9770dabea2ed8eec,
			0x9ce5db24f2e15533,
			0xa0b906d6fc710b26,
			0xa1b28339e472fc13,
			0xa478d6877d52b582,
			0xa486cdf04fcf8d5e,
			0xa518a153042139c8,
			0xa5c93c28ec3bff37,
			0xa7cf2147d9cc59af,
			0xab5a0439ab933dea,
			0xadb20e7070609f45,
			0xb17e199c6ccc445f,
			0xb509d61df01f13a2,
			0xc6ba4f96198a86f7,
			0xcdd7d69aee2dada4,
			0xd0dff216087c0481,
			0xd0e34e1c95c7ef43,
			0xdac5e8cc52a38349,
			0xdb5e06cc074d8247,
			0xdbfec66490f8d669,
			0xdd37202c553854e2,
			0xe003d25ddc1f05c4,
			0xe509643d47807c2d,
			0xe7f779156bdabb8e,
			0xeb1ed22a5561aae3,
			0xf4b2adaeac2fc134,
			0xf6821b0b4a0ed4cc,
			0xf8050e2c31bd97f3,
			0xfa55621a4bbb397a,
			0xfdcda8c80924d69c,
		},
		Compressed: true,
	})
}
