// Code generated by capnpc-go. DO NOT EDIT.

package capnp_service_registry

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

type SturdyRefStored capnp.Struct

// SturdyRefStored_TypeID is the unique identifier for the type SturdyRefStored.
const SturdyRefStored_TypeID = 0xd0e34e1c95c7ef43

func NewSturdyRefStored(s *capnp.Segment) (SturdyRefStored, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SturdyRefStored(st), err
}

func NewRootSturdyRefStored(s *capnp.Segment) (SturdyRefStored, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SturdyRefStored(st), err
}

func ReadRootSturdyRefStored(msg *capnp.Message) (SturdyRefStored, error) {
	root, err := msg.Root()
	return SturdyRefStored(root.Struct()), err
}

func (s SturdyRefStored) String() string {
	str, _ := text.Marshal(0xd0e34e1c95c7ef43, capnp.Struct(s))
	return str
}

func (s SturdyRefStored) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SturdyRefStored) DecodeFromPtr(p capnp.Ptr) SturdyRefStored {
	return SturdyRefStored(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SturdyRefStored) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SturdyRefStored) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SturdyRefStored) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SturdyRefStored) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SturdyRefStored) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s SturdyRefStored) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SturdyRefStored) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s SturdyRefStored) ServiceID() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s SturdyRefStored) HasServiceID() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s SturdyRefStored) ServiceIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetServiceID(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s SturdyRefStored) Payload() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s SturdyRefStored) HasPayload() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s SturdyRefStored) PayloadBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetPayload(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s SturdyRefStored) Usersignature() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s SturdyRefStored) HasUsersignature() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s SturdyRefStored) UsersignatureBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetUsersignature(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

// SturdyRefStored_List is a list of SturdyRefStored.
type SturdyRefStored_List = capnp.StructList[SturdyRefStored]

// NewSturdyRefStored creates a new list of SturdyRefStored.
func NewSturdyRefStored_List(s *capnp.Segment, sz int32) (SturdyRefStored_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return capnp.StructList[SturdyRefStored](l), err
}

// SturdyRefStored_Future is a wrapper for a SturdyRefStored promised by a client call.
type SturdyRefStored_Future struct{ *capnp.Future }

func (f SturdyRefStored_Future) Struct() (SturdyRefStored, error) {
	p, err := f.Future.Ptr()
	return SturdyRefStored(p.Struct()), err
}

type StorageEditor capnp.Client

// StorageEditor_TypeID is the unique identifier for the type StorageEditor.
const StorageEditor_TypeID = 0x9770dabea2ed8eec

func (c StorageEditor) AddSturdyRef(ctx context.Context, params func(StorageEditor_addSturdyRef_Params) error) (StorageEditor_addSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "addSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_addSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_addSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) GetSturdyRef(ctx context.Context, params func(StorageEditor_getSturdyRef_Params) error) (StorageEditor_getSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      1,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "getSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_getSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_getSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) ListSturdyRefsForUser(ctx context.Context, params func(StorageEditor_listSturdyRefsForUser_Params) error) (StorageEditor_listSturdyRefsForUser_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      2,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listSturdyRefsForUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_listSturdyRefsForUser_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_listSturdyRefsForUser_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) ListAllSturdyRefs(ctx context.Context, params func(StorageEditor_listAllSturdyRefs_Params) error) (StorageEditor_listAllSturdyRefs_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      3,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listAllSturdyRefs",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_listAllSturdyRefs_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_listAllSturdyRefs_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) DeleteSturdyRef(ctx context.Context, params func(StorageEditor_deleteSturdyRef_Params) error) (StorageEditor_deleteSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      4,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "deleteSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_deleteSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_deleteSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c StorageEditor) String() string {
	return "StorageEditor(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c StorageEditor) AddRef() StorageEditor {
	return StorageEditor(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c StorageEditor) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c StorageEditor) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c StorageEditor) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (StorageEditor) DecodeFromPtr(p capnp.Ptr) StorageEditor {
	return StorageEditor(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c StorageEditor) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c StorageEditor) IsSame(other StorageEditor) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c StorageEditor) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c StorageEditor) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A StorageEditor_Server is a StorageEditor with a local implementation.
type StorageEditor_Server interface {
	AddSturdyRef(context.Context, StorageEditor_addSturdyRef) error

	GetSturdyRef(context.Context, StorageEditor_getSturdyRef) error

	ListSturdyRefsForUser(context.Context, StorageEditor_listSturdyRefsForUser) error

	ListAllSturdyRefs(context.Context, StorageEditor_listAllSturdyRefs) error

	DeleteSturdyRef(context.Context, StorageEditor_deleteSturdyRef) error
}

// StorageEditor_NewServer creates a new Server from an implementation of StorageEditor_Server.
func StorageEditor_NewServer(s StorageEditor_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(StorageEditor_Methods(nil, s), s, c)
}

// StorageEditor_ServerToClient creates a new Client from an implementation of StorageEditor_Server.
// The caller is responsible for calling Release on the returned Client.
func StorageEditor_ServerToClient(s StorageEditor_Server) StorageEditor {
	return StorageEditor(capnp.NewClient(StorageEditor_NewServer(s)))
}

// StorageEditor_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func StorageEditor_Methods(methods []server.Method, s StorageEditor_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "addSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddSturdyRef(ctx, StorageEditor_addSturdyRef{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      1,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "getSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSturdyRef(ctx, StorageEditor_getSturdyRef{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      2,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listSturdyRefsForUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListSturdyRefsForUser(ctx, StorageEditor_listSturdyRefsForUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      3,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listAllSturdyRefs",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListAllSturdyRefs(ctx, StorageEditor_listAllSturdyRefs{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      4,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "deleteSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteSturdyRef(ctx, StorageEditor_deleteSturdyRef{call})
		},
	})

	return methods
}

// StorageEditor_addSturdyRef holds the state for a server call to StorageEditor.addSturdyRef.
// See server.Call for documentation.
type StorageEditor_addSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_addSturdyRef) Args() StorageEditor_addSturdyRef_Params {
	return StorageEditor_addSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_addSturdyRef) AllocResults() (StorageEditor_addSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(r), err
}

// StorageEditor_getSturdyRef holds the state for a server call to StorageEditor.getSturdyRef.
// See server.Call for documentation.
type StorageEditor_getSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_getSturdyRef) Args() StorageEditor_getSturdyRef_Params {
	return StorageEditor_getSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_getSturdyRef) AllocResults() (StorageEditor_getSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(r), err
}

// StorageEditor_listSturdyRefsForUser holds the state for a server call to StorageEditor.listSturdyRefsForUser.
// See server.Call for documentation.
type StorageEditor_listSturdyRefsForUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_listSturdyRefsForUser) Args() StorageEditor_listSturdyRefsForUser_Params {
	return StorageEditor_listSturdyRefsForUser_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_listSturdyRefsForUser) AllocResults() (StorageEditor_listSturdyRefsForUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(r), err
}

// StorageEditor_listAllSturdyRefs holds the state for a server call to StorageEditor.listAllSturdyRefs.
// See server.Call for documentation.
type StorageEditor_listAllSturdyRefs struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_listAllSturdyRefs) Args() StorageEditor_listAllSturdyRefs_Params {
	return StorageEditor_listAllSturdyRefs_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_listAllSturdyRefs) AllocResults() (StorageEditor_listAllSturdyRefs_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(r), err
}

// StorageEditor_deleteSturdyRef holds the state for a server call to StorageEditor.deleteSturdyRef.
// See server.Call for documentation.
type StorageEditor_deleteSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_deleteSturdyRef) Args() StorageEditor_deleteSturdyRef_Params {
	return StorageEditor_deleteSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_deleteSturdyRef) AllocResults() (StorageEditor_deleteSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(r), err
}

// StorageEditor_List is a list of StorageEditor.
type StorageEditor_List = capnp.CapList[StorageEditor]

// NewStorageEditor_List creates a new list of StorageEditor.
func NewStorageEditor_List(s *capnp.Segment, sz int32) (StorageEditor_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[StorageEditor](l), err
}

type StorageEditor_addSturdyRef_Params capnp.Struct

// StorageEditor_addSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_addSturdyRef_Params.
const StorageEditor_addSturdyRef_Params_TypeID = 0x9ce5db24f2e15533

func NewStorageEditor_addSturdyRef_Params(s *capnp.Segment) (StorageEditor_addSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_addSturdyRef_Params(st), err
}

func NewRootStorageEditor_addSturdyRef_Params(s *capnp.Segment) (StorageEditor_addSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_addSturdyRef_Params(st), err
}

func ReadRootStorageEditor_addSturdyRef_Params(msg *capnp.Message) (StorageEditor_addSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_addSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_addSturdyRef_Params) String() string {
	str, _ := text.Marshal(0x9ce5db24f2e15533, capnp.Struct(s))
	return str
}

func (s StorageEditor_addSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_addSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_addSturdyRef_Params {
	return StorageEditor_addSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_addSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_addSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_addSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_addSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_addSturdyRef_Params) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageEditor_addSturdyRef_Params) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_addSturdyRef_Params) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageEditor_addSturdyRef_Params) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageEditor_addSturdyRef_Params_List is a list of StorageEditor_addSturdyRef_Params.
type StorageEditor_addSturdyRef_Params_List = capnp.StructList[StorageEditor_addSturdyRef_Params]

// NewStorageEditor_addSturdyRef_Params creates a new list of StorageEditor_addSturdyRef_Params.
func NewStorageEditor_addSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_addSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_addSturdyRef_Params](l), err
}

// StorageEditor_addSturdyRef_Params_Future is a wrapper for a StorageEditor_addSturdyRef_Params promised by a client call.
type StorageEditor_addSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_addSturdyRef_Params_Future) Struct() (StorageEditor_addSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_addSturdyRef_Params(p.Struct()), err
}
func (p StorageEditor_addSturdyRef_Params_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

type StorageEditor_addSturdyRef_Results capnp.Struct

// StorageEditor_addSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_addSturdyRef_Results.
const StorageEditor_addSturdyRef_Results_TypeID = 0xcdd7d69aee2dada4

func NewStorageEditor_addSturdyRef_Results(s *capnp.Segment) (StorageEditor_addSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(st), err
}

func NewRootStorageEditor_addSturdyRef_Results(s *capnp.Segment) (StorageEditor_addSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(st), err
}

func ReadRootStorageEditor_addSturdyRef_Results(msg *capnp.Message) (StorageEditor_addSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_addSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_addSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xcdd7d69aee2dada4, capnp.Struct(s))
	return str
}

func (s StorageEditor_addSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_addSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_addSturdyRef_Results {
	return StorageEditor_addSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_addSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_addSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_addSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_addSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_addSturdyRef_Results_List is a list of StorageEditor_addSturdyRef_Results.
type StorageEditor_addSturdyRef_Results_List = capnp.StructList[StorageEditor_addSturdyRef_Results]

// NewStorageEditor_addSturdyRef_Results creates a new list of StorageEditor_addSturdyRef_Results.
func NewStorageEditor_addSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_addSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_addSturdyRef_Results](l), err
}

// StorageEditor_addSturdyRef_Results_Future is a wrapper for a StorageEditor_addSturdyRef_Results promised by a client call.
type StorageEditor_addSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_addSturdyRef_Results_Future) Struct() (StorageEditor_addSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_addSturdyRef_Results(p.Struct()), err
}

type StorageEditor_getSturdyRef_Params capnp.Struct

// StorageEditor_getSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_getSturdyRef_Params.
const StorageEditor_getSturdyRef_Params_TypeID = 0x968c9bfbc19ef7b4

func NewStorageEditor_getSturdyRef_Params(s *capnp.Segment) (StorageEditor_getSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Params(st), err
}

func NewRootStorageEditor_getSturdyRef_Params(s *capnp.Segment) (StorageEditor_getSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Params(st), err
}

func ReadRootStorageEditor_getSturdyRef_Params(msg *capnp.Message) (StorageEditor_getSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_getSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_getSturdyRef_Params) String() string {
	str, _ := text.Marshal(0x968c9bfbc19ef7b4, capnp.Struct(s))
	return str
}

func (s StorageEditor_getSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_getSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_getSturdyRef_Params {
	return StorageEditor_getSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_getSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_getSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_getSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_getSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_getSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_getSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_getSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_getSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_getSturdyRef_Params_List is a list of StorageEditor_getSturdyRef_Params.
type StorageEditor_getSturdyRef_Params_List = capnp.StructList[StorageEditor_getSturdyRef_Params]

// NewStorageEditor_getSturdyRef_Params creates a new list of StorageEditor_getSturdyRef_Params.
func NewStorageEditor_getSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_getSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_getSturdyRef_Params](l), err
}

// StorageEditor_getSturdyRef_Params_Future is a wrapper for a StorageEditor_getSturdyRef_Params promised by a client call.
type StorageEditor_getSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_getSturdyRef_Params_Future) Struct() (StorageEditor_getSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_getSturdyRef_Params(p.Struct()), err
}

type StorageEditor_getSturdyRef_Results capnp.Struct

// StorageEditor_getSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_getSturdyRef_Results.
const StorageEditor_getSturdyRef_Results_TypeID = 0xe509643d47807c2d

func NewStorageEditor_getSturdyRef_Results(s *capnp.Segment) (StorageEditor_getSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(st), err
}

func NewRootStorageEditor_getSturdyRef_Results(s *capnp.Segment) (StorageEditor_getSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(st), err
}

func ReadRootStorageEditor_getSturdyRef_Results(msg *capnp.Message) (StorageEditor_getSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_getSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_getSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xe509643d47807c2d, capnp.Struct(s))
	return str
}

func (s StorageEditor_getSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_getSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_getSturdyRef_Results {
	return StorageEditor_getSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_getSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_getSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_getSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_getSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_getSturdyRef_Results) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageEditor_getSturdyRef_Results) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_getSturdyRef_Results) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageEditor_getSturdyRef_Results) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageEditor_getSturdyRef_Results_List is a list of StorageEditor_getSturdyRef_Results.
type StorageEditor_getSturdyRef_Results_List = capnp.StructList[StorageEditor_getSturdyRef_Results]

// NewStorageEditor_getSturdyRef_Results creates a new list of StorageEditor_getSturdyRef_Results.
func NewStorageEditor_getSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_getSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_getSturdyRef_Results](l), err
}

// StorageEditor_getSturdyRef_Results_Future is a wrapper for a StorageEditor_getSturdyRef_Results promised by a client call.
type StorageEditor_getSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_getSturdyRef_Results_Future) Struct() (StorageEditor_getSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_getSturdyRef_Results(p.Struct()), err
}
func (p StorageEditor_getSturdyRef_Results_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

type StorageEditor_listSturdyRefsForUser_Params capnp.Struct

// StorageEditor_listSturdyRefsForUser_Params_TypeID is the unique identifier for the type StorageEditor_listSturdyRefsForUser_Params.
const StorageEditor_listSturdyRefsForUser_Params_TypeID = 0xadb20e7070609f45

func NewStorageEditor_listSturdyRefsForUser_Params(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Params(st), err
}

func NewRootStorageEditor_listSturdyRefsForUser_Params(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Params(st), err
}

func ReadRootStorageEditor_listSturdyRefsForUser_Params(msg *capnp.Message) (StorageEditor_listSturdyRefsForUser_Params, error) {
	root, err := msg.Root()
	return StorageEditor_listSturdyRefsForUser_Params(root.Struct()), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) String() string {
	str, _ := text.Marshal(0xadb20e7070609f45, capnp.Struct(s))
	return str
}

func (s StorageEditor_listSturdyRefsForUser_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listSturdyRefsForUser_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_listSturdyRefsForUser_Params {
	return StorageEditor_listSturdyRefsForUser_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listSturdyRefsForUser_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listSturdyRefsForUser_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listSturdyRefsForUser_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listSturdyRefsForUser_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listSturdyRefsForUser_Params) Usersignature() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) HasUsersignature() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listSturdyRefsForUser_Params) UsersignatureBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) SetUsersignature(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_listSturdyRefsForUser_Params_List is a list of StorageEditor_listSturdyRefsForUser_Params.
type StorageEditor_listSturdyRefsForUser_Params_List = capnp.StructList[StorageEditor_listSturdyRefsForUser_Params]

// NewStorageEditor_listSturdyRefsForUser_Params creates a new list of StorageEditor_listSturdyRefsForUser_Params.
func NewStorageEditor_listSturdyRefsForUser_Params_List(s *capnp.Segment, sz int32) (StorageEditor_listSturdyRefsForUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listSturdyRefsForUser_Params](l), err
}

// StorageEditor_listSturdyRefsForUser_Params_Future is a wrapper for a StorageEditor_listSturdyRefsForUser_Params promised by a client call.
type StorageEditor_listSturdyRefsForUser_Params_Future struct{ *capnp.Future }

func (f StorageEditor_listSturdyRefsForUser_Params_Future) Struct() (StorageEditor_listSturdyRefsForUser_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listSturdyRefsForUser_Params(p.Struct()), err
}

type StorageEditor_listSturdyRefsForUser_Results capnp.Struct

// StorageEditor_listSturdyRefsForUser_Results_TypeID is the unique identifier for the type StorageEditor_listSturdyRefsForUser_Results.
const StorageEditor_listSturdyRefsForUser_Results_TypeID = 0xfa55621a4bbb397a

func NewStorageEditor_listSturdyRefsForUser_Results(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(st), err
}

func NewRootStorageEditor_listSturdyRefsForUser_Results(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(st), err
}

func ReadRootStorageEditor_listSturdyRefsForUser_Results(msg *capnp.Message) (StorageEditor_listSturdyRefsForUser_Results, error) {
	root, err := msg.Root()
	return StorageEditor_listSturdyRefsForUser_Results(root.Struct()), err
}

func (s StorageEditor_listSturdyRefsForUser_Results) String() string {
	str, _ := text.Marshal(0xfa55621a4bbb397a, capnp.Struct(s))
	return str
}

func (s StorageEditor_listSturdyRefsForUser_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listSturdyRefsForUser_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_listSturdyRefsForUser_Results {
	return StorageEditor_listSturdyRefsForUser_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listSturdyRefsForUser_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listSturdyRefsForUser_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listSturdyRefsForUser_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listSturdyRefsForUser_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listSturdyRefsForUser_Results) Sturdyrefs() (SturdyRefStored_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored_List(p.List()), err
}

func (s StorageEditor_listSturdyRefsForUser_Results) HasSturdyrefs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listSturdyRefsForUser_Results) SetSturdyrefs(v SturdyRefStored_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSturdyrefs sets the sturdyrefs field to a newly
// allocated SturdyRefStored_List, preferring placement in s's segment.
func (s StorageEditor_listSturdyRefsForUser_Results) NewSturdyrefs(n int32) (SturdyRefStored_List, error) {
	l, err := NewSturdyRefStored_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return SturdyRefStored_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// StorageEditor_listSturdyRefsForUser_Results_List is a list of StorageEditor_listSturdyRefsForUser_Results.
type StorageEditor_listSturdyRefsForUser_Results_List = capnp.StructList[StorageEditor_listSturdyRefsForUser_Results]

// NewStorageEditor_listSturdyRefsForUser_Results creates a new list of StorageEditor_listSturdyRefsForUser_Results.
func NewStorageEditor_listSturdyRefsForUser_Results_List(s *capnp.Segment, sz int32) (StorageEditor_listSturdyRefsForUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listSturdyRefsForUser_Results](l), err
}

// StorageEditor_listSturdyRefsForUser_Results_Future is a wrapper for a StorageEditor_listSturdyRefsForUser_Results promised by a client call.
type StorageEditor_listSturdyRefsForUser_Results_Future struct{ *capnp.Future }

func (f StorageEditor_listSturdyRefsForUser_Results_Future) Struct() (StorageEditor_listSturdyRefsForUser_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listSturdyRefsForUser_Results(p.Struct()), err
}

type StorageEditor_listAllSturdyRefs_Params capnp.Struct

// StorageEditor_listAllSturdyRefs_Params_TypeID is the unique identifier for the type StorageEditor_listAllSturdyRefs_Params.
const StorageEditor_listAllSturdyRefs_Params_TypeID = 0xa518a153042139c8

func NewStorageEditor_listAllSturdyRefs_Params(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_listAllSturdyRefs_Params(st), err
}

func NewRootStorageEditor_listAllSturdyRefs_Params(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_listAllSturdyRefs_Params(st), err
}

func ReadRootStorageEditor_listAllSturdyRefs_Params(msg *capnp.Message) (StorageEditor_listAllSturdyRefs_Params, error) {
	root, err := msg.Root()
	return StorageEditor_listAllSturdyRefs_Params(root.Struct()), err
}

func (s StorageEditor_listAllSturdyRefs_Params) String() string {
	str, _ := text.Marshal(0xa518a153042139c8, capnp.Struct(s))
	return str
}

func (s StorageEditor_listAllSturdyRefs_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listAllSturdyRefs_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_listAllSturdyRefs_Params {
	return StorageEditor_listAllSturdyRefs_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listAllSturdyRefs_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listAllSturdyRefs_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listAllSturdyRefs_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listAllSturdyRefs_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_listAllSturdyRefs_Params_List is a list of StorageEditor_listAllSturdyRefs_Params.
type StorageEditor_listAllSturdyRefs_Params_List = capnp.StructList[StorageEditor_listAllSturdyRefs_Params]

// NewStorageEditor_listAllSturdyRefs_Params creates a new list of StorageEditor_listAllSturdyRefs_Params.
func NewStorageEditor_listAllSturdyRefs_Params_List(s *capnp.Segment, sz int32) (StorageEditor_listAllSturdyRefs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_listAllSturdyRefs_Params](l), err
}

// StorageEditor_listAllSturdyRefs_Params_Future is a wrapper for a StorageEditor_listAllSturdyRefs_Params promised by a client call.
type StorageEditor_listAllSturdyRefs_Params_Future struct{ *capnp.Future }

func (f StorageEditor_listAllSturdyRefs_Params_Future) Struct() (StorageEditor_listAllSturdyRefs_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listAllSturdyRefs_Params(p.Struct()), err
}

type StorageEditor_listAllSturdyRefs_Results capnp.Struct

// StorageEditor_listAllSturdyRefs_Results_TypeID is the unique identifier for the type StorageEditor_listAllSturdyRefs_Results.
const StorageEditor_listAllSturdyRefs_Results_TypeID = 0x9248a5211394ad54

func NewStorageEditor_listAllSturdyRefs_Results(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(st), err
}

func NewRootStorageEditor_listAllSturdyRefs_Results(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(st), err
}

func ReadRootStorageEditor_listAllSturdyRefs_Results(msg *capnp.Message) (StorageEditor_listAllSturdyRefs_Results, error) {
	root, err := msg.Root()
	return StorageEditor_listAllSturdyRefs_Results(root.Struct()), err
}

func (s StorageEditor_listAllSturdyRefs_Results) String() string {
	str, _ := text.Marshal(0x9248a5211394ad54, capnp.Struct(s))
	return str
}

func (s StorageEditor_listAllSturdyRefs_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listAllSturdyRefs_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_listAllSturdyRefs_Results {
	return StorageEditor_listAllSturdyRefs_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listAllSturdyRefs_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listAllSturdyRefs_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listAllSturdyRefs_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listAllSturdyRefs_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listAllSturdyRefs_Results) Sturdyrefs() (SturdyRefStored_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored_List(p.List()), err
}

func (s StorageEditor_listAllSturdyRefs_Results) HasSturdyrefs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listAllSturdyRefs_Results) SetSturdyrefs(v SturdyRefStored_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSturdyrefs sets the sturdyrefs field to a newly
// allocated SturdyRefStored_List, preferring placement in s's segment.
func (s StorageEditor_listAllSturdyRefs_Results) NewSturdyrefs(n int32) (SturdyRefStored_List, error) {
	l, err := NewSturdyRefStored_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return SturdyRefStored_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// StorageEditor_listAllSturdyRefs_Results_List is a list of StorageEditor_listAllSturdyRefs_Results.
type StorageEditor_listAllSturdyRefs_Results_List = capnp.StructList[StorageEditor_listAllSturdyRefs_Results]

// NewStorageEditor_listAllSturdyRefs_Results creates a new list of StorageEditor_listAllSturdyRefs_Results.
func NewStorageEditor_listAllSturdyRefs_Results_List(s *capnp.Segment, sz int32) (StorageEditor_listAllSturdyRefs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listAllSturdyRefs_Results](l), err
}

// StorageEditor_listAllSturdyRefs_Results_Future is a wrapper for a StorageEditor_listAllSturdyRefs_Results promised by a client call.
type StorageEditor_listAllSturdyRefs_Results_Future struct{ *capnp.Future }

func (f StorageEditor_listAllSturdyRefs_Results_Future) Struct() (StorageEditor_listAllSturdyRefs_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listAllSturdyRefs_Results(p.Struct()), err
}

type StorageEditor_deleteSturdyRef_Params capnp.Struct

// StorageEditor_deleteSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_deleteSturdyRef_Params.
const StorageEditor_deleteSturdyRef_Params_TypeID = 0xf4b2adaeac2fc134

func NewStorageEditor_deleteSturdyRef_Params(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_deleteSturdyRef_Params(st), err
}

func NewRootStorageEditor_deleteSturdyRef_Params(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_deleteSturdyRef_Params(st), err
}

func ReadRootStorageEditor_deleteSturdyRef_Params(msg *capnp.Message) (StorageEditor_deleteSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_deleteSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_deleteSturdyRef_Params) String() string {
	str, _ := text.Marshal(0xf4b2adaeac2fc134, capnp.Struct(s))
	return str
}

func (s StorageEditor_deleteSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_deleteSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_deleteSturdyRef_Params {
	return StorageEditor_deleteSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_deleteSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_deleteSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_deleteSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_deleteSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_deleteSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_deleteSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_deleteSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_deleteSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_deleteSturdyRef_Params_List is a list of StorageEditor_deleteSturdyRef_Params.
type StorageEditor_deleteSturdyRef_Params_List = capnp.StructList[StorageEditor_deleteSturdyRef_Params]

// NewStorageEditor_deleteSturdyRef_Params creates a new list of StorageEditor_deleteSturdyRef_Params.
func NewStorageEditor_deleteSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_deleteSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_deleteSturdyRef_Params](l), err
}

// StorageEditor_deleteSturdyRef_Params_Future is a wrapper for a StorageEditor_deleteSturdyRef_Params promised by a client call.
type StorageEditor_deleteSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_deleteSturdyRef_Params_Future) Struct() (StorageEditor_deleteSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_deleteSturdyRef_Params(p.Struct()), err
}

type StorageEditor_deleteSturdyRef_Results capnp.Struct

// StorageEditor_deleteSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_deleteSturdyRef_Results.
const StorageEditor_deleteSturdyRef_Results_TypeID = 0x8bfbf4be38627800

func NewStorageEditor_deleteSturdyRef_Results(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(st), err
}

func NewRootStorageEditor_deleteSturdyRef_Results(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(st), err
}

func ReadRootStorageEditor_deleteSturdyRef_Results(msg *capnp.Message) (StorageEditor_deleteSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_deleteSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_deleteSturdyRef_Results) String() string {
	str, _ := text.Marshal(0x8bfbf4be38627800, capnp.Struct(s))
	return str
}

func (s StorageEditor_deleteSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_deleteSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_deleteSturdyRef_Results {
	return StorageEditor_deleteSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_deleteSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_deleteSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_deleteSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_deleteSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_deleteSturdyRef_Results_List is a list of StorageEditor_deleteSturdyRef_Results.
type StorageEditor_deleteSturdyRef_Results_List = capnp.StructList[StorageEditor_deleteSturdyRef_Results]

// NewStorageEditor_deleteSturdyRef_Results creates a new list of StorageEditor_deleteSturdyRef_Results.
func NewStorageEditor_deleteSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_deleteSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_deleteSturdyRef_Results](l), err
}

// StorageEditor_deleteSturdyRef_Results_Future is a wrapper for a StorageEditor_deleteSturdyRef_Results promised by a client call.
type StorageEditor_deleteSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_deleteSturdyRef_Results_Future) Struct() (StorageEditor_deleteSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_deleteSturdyRef_Results(p.Struct()), err
}

type StorageReader capnp.Client

// StorageReader_TypeID is the unique identifier for the type StorageReader.
const StorageReader_TypeID = 0xeb1ed22a5561aae3

func (c StorageReader) GetSturdyRef(ctx context.Context, params func(StorageReader_getSturdyRef_Params) error) (StorageReader_getSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xeb1ed22a5561aae3,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageReader",
			MethodName:    "getSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageReader_getSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageReader_getSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageReader) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c StorageReader) String() string {
	return "StorageReader(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c StorageReader) AddRef() StorageReader {
	return StorageReader(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c StorageReader) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c StorageReader) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c StorageReader) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (StorageReader) DecodeFromPtr(p capnp.Ptr) StorageReader {
	return StorageReader(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c StorageReader) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c StorageReader) IsSame(other StorageReader) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c StorageReader) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c StorageReader) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A StorageReader_Server is a StorageReader with a local implementation.
type StorageReader_Server interface {
	GetSturdyRef(context.Context, StorageReader_getSturdyRef) error
}

// StorageReader_NewServer creates a new Server from an implementation of StorageReader_Server.
func StorageReader_NewServer(s StorageReader_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(StorageReader_Methods(nil, s), s, c)
}

// StorageReader_ServerToClient creates a new Client from an implementation of StorageReader_Server.
// The caller is responsible for calling Release on the returned Client.
func StorageReader_ServerToClient(s StorageReader_Server) StorageReader {
	return StorageReader(capnp.NewClient(StorageReader_NewServer(s)))
}

// StorageReader_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func StorageReader_Methods(methods []server.Method, s StorageReader_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xeb1ed22a5561aae3,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageReader",
			MethodName:    "getSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSturdyRef(ctx, StorageReader_getSturdyRef{call})
		},
	})

	return methods
}

// StorageReader_getSturdyRef holds the state for a server call to StorageReader.getSturdyRef.
// See server.Call for documentation.
type StorageReader_getSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageReader_getSturdyRef) Args() StorageReader_getSturdyRef_Params {
	return StorageReader_getSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageReader_getSturdyRef) AllocResults() (StorageReader_getSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(r), err
}

// StorageReader_List is a list of StorageReader.
type StorageReader_List = capnp.CapList[StorageReader]

// NewStorageReader_List creates a new list of StorageReader.
func NewStorageReader_List(s *capnp.Segment, sz int32) (StorageReader_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[StorageReader](l), err
}

type StorageReader_getSturdyRef_Params capnp.Struct

// StorageReader_getSturdyRef_Params_TypeID is the unique identifier for the type StorageReader_getSturdyRef_Params.
const StorageReader_getSturdyRef_Params_TypeID = 0xa478d6877d52b582

func NewStorageReader_getSturdyRef_Params(s *capnp.Segment) (StorageReader_getSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Params(st), err
}

func NewRootStorageReader_getSturdyRef_Params(s *capnp.Segment) (StorageReader_getSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Params(st), err
}

func ReadRootStorageReader_getSturdyRef_Params(msg *capnp.Message) (StorageReader_getSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageReader_getSturdyRef_Params(root.Struct()), err
}

func (s StorageReader_getSturdyRef_Params) String() string {
	str, _ := text.Marshal(0xa478d6877d52b582, capnp.Struct(s))
	return str
}

func (s StorageReader_getSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageReader_getSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageReader_getSturdyRef_Params {
	return StorageReader_getSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageReader_getSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageReader_getSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageReader_getSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageReader_getSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageReader_getSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageReader_getSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageReader_getSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageReader_getSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageReader_getSturdyRef_Params_List is a list of StorageReader_getSturdyRef_Params.
type StorageReader_getSturdyRef_Params_List = capnp.StructList[StorageReader_getSturdyRef_Params]

// NewStorageReader_getSturdyRef_Params creates a new list of StorageReader_getSturdyRef_Params.
func NewStorageReader_getSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageReader_getSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageReader_getSturdyRef_Params](l), err
}

// StorageReader_getSturdyRef_Params_Future is a wrapper for a StorageReader_getSturdyRef_Params promised by a client call.
type StorageReader_getSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageReader_getSturdyRef_Params_Future) Struct() (StorageReader_getSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageReader_getSturdyRef_Params(p.Struct()), err
}

type StorageReader_getSturdyRef_Results capnp.Struct

// StorageReader_getSturdyRef_Results_TypeID is the unique identifier for the type StorageReader_getSturdyRef_Results.
const StorageReader_getSturdyRef_Results_TypeID = 0xd0dff216087c0481

func NewStorageReader_getSturdyRef_Results(s *capnp.Segment) (StorageReader_getSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(st), err
}

func NewRootStorageReader_getSturdyRef_Results(s *capnp.Segment) (StorageReader_getSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(st), err
}

func ReadRootStorageReader_getSturdyRef_Results(msg *capnp.Message) (StorageReader_getSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageReader_getSturdyRef_Results(root.Struct()), err
}

func (s StorageReader_getSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xd0dff216087c0481, capnp.Struct(s))
	return str
}

func (s StorageReader_getSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageReader_getSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageReader_getSturdyRef_Results {
	return StorageReader_getSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageReader_getSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageReader_getSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageReader_getSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageReader_getSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageReader_getSturdyRef_Results) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageReader_getSturdyRef_Results) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageReader_getSturdyRef_Results) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageReader_getSturdyRef_Results) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageReader_getSturdyRef_Results_List is a list of StorageReader_getSturdyRef_Results.
type StorageReader_getSturdyRef_Results_List = capnp.StructList[StorageReader_getSturdyRef_Results]

// NewStorageReader_getSturdyRef_Results creates a new list of StorageReader_getSturdyRef_Results.
func NewStorageReader_getSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageReader_getSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageReader_getSturdyRef_Results](l), err
}

// StorageReader_getSturdyRef_Results_Future is a wrapper for a StorageReader_getSturdyRef_Results promised by a client call.
type StorageReader_getSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageReader_getSturdyRef_Results_Future) Struct() (StorageReader_getSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageReader_getSturdyRef_Results(p.Struct()), err
}
func (p StorageReader_getSturdyRef_Results_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

const schema_dca555fc76741dc1 = "x\xda\xb4U]h\x1cU\x14>\xe7\xde\xf91\x90n" +
	"s\x99E\xaa4.\x85<\x88\xb0U\xa9\x82\x11\xa4[" +
	"\xb5\x8d\x8b\";\xbb\xeeC}\xeal\xe7n\\\x99t" +
	"\xb7sgK*]\xacy\x11\x7fPR\xacb\xfd\xa3" +
	"\xa5y)\xae\x0f\x8b}\x12\x0ay\x10\x7f@(y\x88" +
	"\xe0\x0fbB\xf0A\xa3\x10\x02\xa2\x11G\xee\xec\xce\xec" +
	"$a\xf3k\xdfv\xcf=\xdfw\xce\xfd\xbes\xee\xdc" +
	"W\"\x19\xe5\xfe=oj@\xcc\xa7T\xed\xdf\xf1\xd2" +
	"C7\x96W^c\xfb\x11@\xd1\x01\x0e\xa5\xe9\x15\x04" +
	"\xc5\x7f\xa6\xf9\x96q`\xea\x89\x0b\x10\x9c\xa8(\x8f\x06" +
	"i\x0b\x01\x8d4=\x0c\xe8\x7f\xfa\xe7\x87\xd3+\xef\xbd" +
	"\xfev<\xc1\xa2\x132a,H\xf8\xed\x8d\xc5+7" +
	"\xbe\xab\xbd\x03,A\xfd\xe9A\xef\xcc?\xc5\xa9\x1f\x00" +
	"\xd0\x98\xa4s\xc6\x07T\xe6\xbfKG\xd0h\xc8\xb2\xfe" +
	"\xa1\xe2\xcfKC\xdf/\xbc\x1f\xa7\xe3J@wZ\x91" +
	"t\x13\xd7\xf3\x8d\x97g\xc7\xaf\xc6\x13.\xb6\x13.\x07" +
	"\x09_\x0e\x1fP\x0a\x97\xf7MA\xf7.\x9f+\xd7\xe4" +
	"]\x8e~t\xa2VK\xb4\x9aq\xe8u\xe5k\x09\xfd" +
	"*\x80^m\xa6\x7f\xbf4\xfb\xed71\xe8\xa2\xf2\xaa" +
	"\x84\xbe\xa4\x9c\xbb\xed\xf6\xa5\x9fn\xc6\xa1?\xca#4" +
	"\x16\x03\xe8c\x7f|qq\xff\xd3\xf37\x81%\xb0{" +
	"KUr\x18L]2\x06U\xf9\xeb\x0e\xf5\x17@?" +
	"}\xee\xfc\xc8#v\xdfB\x9c\xec/5 \xeb\xd3$" +
	"\xd9\xfc5\xabx\xcf\xcc]\xbf\xae\x93,\xad\xcd\x19\xc3" +
	"\x9adzP\x1b1,\xf9\xcb\x7f`\xfa\xde\x8f?i" +
	"\xb6\x96\xe3lY\xed\x92d;\x1e\xb0\xbd0\xfc\xd9\x93" +
	"w\x96\x8a\x7f\xc7\x13\x1a\xda\x8cL\x98\xd4\x0eC\xda\x17" +
	"^\xd5\xb5F\xf9A\xf5\xa4U;U{\xb8\xd0\xfe{" +
	"\xd4\xaexU\xf7\xa0\xcd\x1d\xee\xf1\x82Ww\xed\xb3y" +
	"^\x1e\xcasQ\xd7\x1dOl\x8cr*\xc2;\xe28" +
	"\x11L\x0c\xe5yJ\xd4\x1dO\x98\x0aU\x00\x14\x04`" +
	"{\x9e\x050\xfb)\x9aw\x13\xf4E\x90\xear\xa0e" +
	"\x81\x09\xc0\x1cE\x1c\xe8\xca\x0a(\x83\x1b\x17\x1d\xe5^" +
	"\xb7\xcf\x9c\xe5Zc\x02\xe2\xe5J\x9dr\xfb\xa2ry" +
	"\x0ez9\xfb8\xf6\x03\xc1\xfe\x18=YK\xaf{U" +
	"7\x87h&\xa9\x1a\x1bR\x0c\x07\x86M>\x0f\x84\xbd" +
	"\xa2cw\x1f0t\x995\xe4Y]G\x12\x0d \x86" +
	"\x96\xb0J\x0b\x08\xe3:\xd2hl1\xdc8v\xfc\x02" +
	"\x10V\xd4Q\x89,F\x08\xd74;\x01\x84\x1d\xd1}" +
	"\xcb\xb6\x83+\xc3^y\xe9\x0c\xfa\xa1\x06Q@:!" +
	"#\xd8\xf6\xe1X5\xe5\x16\x05w;'\xd2#\x0c5" +
	"C\x91A?\xf4\x1b;A\xc8`\x0e7\x11>\xec\xa2" +
	"\x97\xf0\xf9u\xc2\xbb\x1c\xb0\xbc\xc6\xdf\x81\x9e\xfe\xe6\xb9" +
	"e\xf3\xff\xd3\xdf-\xcel\xce\xda+\x8bD0\xad\x17" +
	"\xac\x8b9V\x0d\xe4\x0d\xdb[\xd5\x9f\x1b\xeb\xaf.\xb8" +
	"+*\xa3\xa7 eyu\x97o\xad\xc3U:\xcbE" +
	"t<\x01\xb0\x0d\xd1\"\xcc\xee\xdc\x89\xd6\xa3\xc3[H" +
	"yU\x97\xdbrA\x06\"^K\xdaq\x82\xa2\xe9\x10" +
	"d\x88I\x94\xc1\x8a,\xf6\x1cE\xd3#\xc8\x08I\"" +
	"\x01`\xa7\x1f\x050\x1d\x8a\xe68AFi\x12)\x00" +
	"\xabK\xb5<\x8a\xe6\xf9\xdenr\xf7L\xe5$\xcf\x02" +
	"F\xb1\x17k\xd6Y\xa7j\xd9Q\xce\x8et\xbe\xa5\x9a" +
	"\x85\xe6\xe86\x0f\x9e\x14%xR\xc2\xcf\x1a\x86_\x1a" +
	"\xc6\xe4\xb3\xd1\xa7\xaf\xdb\xe8M\xb7q\xed\x8b-G\x91" +
	"\x8e\x89\x9dm\xca6F\xbe-\x14\xee\xee\x85\xff/\x00" +
	"\x00\xff\xff\x19\x8e\x8eY"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_dca555fc76741dc1,
		Nodes: []uint64{
			0x8bfbf4be38627800,
			0x9248a5211394ad54,
			0x968c9bfbc19ef7b4,
			0x9770dabea2ed8eec,
			0x9ce5db24f2e15533,
			0xa478d6877d52b582,
			0xa518a153042139c8,
			0xadb20e7070609f45,
			0xcdd7d69aee2dada4,
			0xd0dff216087c0481,
			0xd0e34e1c95c7ef43,
			0xe509643d47807c2d,
			0xeb1ed22a5561aae3,
			0xf4b2adaeac2fc134,
			0xfa55621a4bbb397a,
		},
		Compressed: true,
	})
}
