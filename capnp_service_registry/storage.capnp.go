// Code generated by capnpc-go. DO NOT EDIT.

package capnp_service_registry

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

type SturdyRefStored capnp.Struct

// SturdyRefStored_TypeID is the unique identifier for the type SturdyRefStored.
const SturdyRefStored_TypeID = 0xd0e34e1c95c7ef43

func NewSturdyRefStored(s *capnp.Segment) (SturdyRefStored, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SturdyRefStored(st), err
}

func NewRootSturdyRefStored(s *capnp.Segment) (SturdyRefStored, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return SturdyRefStored(st), err
}

func ReadRootSturdyRefStored(msg *capnp.Message) (SturdyRefStored, error) {
	root, err := msg.Root()
	return SturdyRefStored(root.Struct()), err
}

func (s SturdyRefStored) String() string {
	str, _ := text.Marshal(0xd0e34e1c95c7ef43, capnp.Struct(s))
	return str
}

func (s SturdyRefStored) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (SturdyRefStored) DecodeFromPtr(p capnp.Ptr) SturdyRefStored {
	return SturdyRefStored(capnp.Struct{}.DecodeFromPtr(p))
}

func (s SturdyRefStored) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s SturdyRefStored) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s SturdyRefStored) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s SturdyRefStored) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s SturdyRefStored) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s SturdyRefStored) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s SturdyRefStored) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s SturdyRefStored) ServiceID() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s SturdyRefStored) HasServiceID() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s SturdyRefStored) ServiceIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetServiceID(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s SturdyRefStored) Payload() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s SturdyRefStored) HasPayload() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s SturdyRefStored) PayloadBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetPayload(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s SturdyRefStored) Usersignature() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s SturdyRefStored) HasUsersignature() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s SturdyRefStored) UsersignatureBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s SturdyRefStored) SetUsersignature(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

// SturdyRefStored_List is a list of SturdyRefStored.
type SturdyRefStored_List = capnp.StructList[SturdyRefStored]

// NewSturdyRefStored creates a new list of SturdyRefStored.
func NewSturdyRefStored_List(s *capnp.Segment, sz int32) (SturdyRefStored_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return capnp.StructList[SturdyRefStored](l), err
}

// SturdyRefStored_Future is a wrapper for a SturdyRefStored promised by a client call.
type SturdyRefStored_Future struct{ *capnp.Future }

func (f SturdyRefStored_Future) Struct() (SturdyRefStored, error) {
	p, err := f.Future.Ptr()
	return SturdyRefStored(p.Struct()), err
}

type StorageEditor capnp.Client

// StorageEditor_TypeID is the unique identifier for the type StorageEditor.
const StorageEditor_TypeID = 0x9770dabea2ed8eec

func (c StorageEditor) AddSturdyRef(ctx context.Context, params func(StorageEditor_addSturdyRef_Params) error) (StorageEditor_addSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "addSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_addSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_addSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) GetSturdyRef(ctx context.Context, params func(StorageEditor_getSturdyRef_Params) error) (StorageEditor_getSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      1,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "getSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_getSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_getSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) ListSturdyRefsForUser(ctx context.Context, params func(StorageEditor_listSturdyRefsForUser_Params) error) (StorageEditor_listSturdyRefsForUser_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      2,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listSturdyRefsForUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_listSturdyRefsForUser_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_listSturdyRefsForUser_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) ListAllSturdyRefs(ctx context.Context, params func(StorageEditor_listAllSturdyRefs_Params) error) (StorageEditor_listAllSturdyRefs_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      3,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listAllSturdyRefs",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_listAllSturdyRefs_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_listAllSturdyRefs_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) DeleteSturdyRef(ctx context.Context, params func(StorageEditor_deleteSturdyRef_Params) error) (StorageEditor_deleteSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      4,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "deleteSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageEditor_deleteSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageEditor_deleteSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageEditor) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c StorageEditor) String() string {
	return "StorageEditor(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c StorageEditor) AddRef() StorageEditor {
	return StorageEditor(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c StorageEditor) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c StorageEditor) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c StorageEditor) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (StorageEditor) DecodeFromPtr(p capnp.Ptr) StorageEditor {
	return StorageEditor(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c StorageEditor) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c StorageEditor) IsSame(other StorageEditor) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c StorageEditor) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c StorageEditor) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A StorageEditor_Server is a StorageEditor with a local implementation.
type StorageEditor_Server interface {
	AddSturdyRef(context.Context, StorageEditor_addSturdyRef) error

	GetSturdyRef(context.Context, StorageEditor_getSturdyRef) error

	ListSturdyRefsForUser(context.Context, StorageEditor_listSturdyRefsForUser) error

	ListAllSturdyRefs(context.Context, StorageEditor_listAllSturdyRefs) error

	DeleteSturdyRef(context.Context, StorageEditor_deleteSturdyRef) error
}

// StorageEditor_NewServer creates a new Server from an implementation of StorageEditor_Server.
func StorageEditor_NewServer(s StorageEditor_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(StorageEditor_Methods(nil, s), s, c)
}

// StorageEditor_ServerToClient creates a new Client from an implementation of StorageEditor_Server.
// The caller is responsible for calling Release on the returned Client.
func StorageEditor_ServerToClient(s StorageEditor_Server) StorageEditor {
	return StorageEditor(capnp.NewClient(StorageEditor_NewServer(s)))
}

// StorageEditor_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func StorageEditor_Methods(methods []server.Method, s StorageEditor_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "addSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AddSturdyRef(ctx, StorageEditor_addSturdyRef{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      1,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "getSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSturdyRef(ctx, StorageEditor_getSturdyRef{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      2,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listSturdyRefsForUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListSturdyRefsForUser(ctx, StorageEditor_listSturdyRefsForUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      3,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "listAllSturdyRefs",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ListAllSturdyRefs(ctx, StorageEditor_listAllSturdyRefs{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9770dabea2ed8eec,
			MethodID:      4,
			InterfaceName: "storage.capnp:StorageEditor",
			MethodName:    "deleteSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.DeleteSturdyRef(ctx, StorageEditor_deleteSturdyRef{call})
		},
	})

	return methods
}

// StorageEditor_addSturdyRef holds the state for a server call to StorageEditor.addSturdyRef.
// See server.Call for documentation.
type StorageEditor_addSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_addSturdyRef) Args() StorageEditor_addSturdyRef_Params {
	return StorageEditor_addSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_addSturdyRef) AllocResults() (StorageEditor_addSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(r), err
}

// StorageEditor_getSturdyRef holds the state for a server call to StorageEditor.getSturdyRef.
// See server.Call for documentation.
type StorageEditor_getSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_getSturdyRef) Args() StorageEditor_getSturdyRef_Params {
	return StorageEditor_getSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_getSturdyRef) AllocResults() (StorageEditor_getSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(r), err
}

// StorageEditor_listSturdyRefsForUser holds the state for a server call to StorageEditor.listSturdyRefsForUser.
// See server.Call for documentation.
type StorageEditor_listSturdyRefsForUser struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_listSturdyRefsForUser) Args() StorageEditor_listSturdyRefsForUser_Params {
	return StorageEditor_listSturdyRefsForUser_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_listSturdyRefsForUser) AllocResults() (StorageEditor_listSturdyRefsForUser_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(r), err
}

// StorageEditor_listAllSturdyRefs holds the state for a server call to StorageEditor.listAllSturdyRefs.
// See server.Call for documentation.
type StorageEditor_listAllSturdyRefs struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_listAllSturdyRefs) Args() StorageEditor_listAllSturdyRefs_Params {
	return StorageEditor_listAllSturdyRefs_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_listAllSturdyRefs) AllocResults() (StorageEditor_listAllSturdyRefs_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(r), err
}

// StorageEditor_deleteSturdyRef holds the state for a server call to StorageEditor.deleteSturdyRef.
// See server.Call for documentation.
type StorageEditor_deleteSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageEditor_deleteSturdyRef) Args() StorageEditor_deleteSturdyRef_Params {
	return StorageEditor_deleteSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageEditor_deleteSturdyRef) AllocResults() (StorageEditor_deleteSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(r), err
}

// StorageEditor_List is a list of StorageEditor.
type StorageEditor_List = capnp.CapList[StorageEditor]

// NewStorageEditor_List creates a new list of StorageEditor.
func NewStorageEditor_List(s *capnp.Segment, sz int32) (StorageEditor_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[StorageEditor](l), err
}

type StorageEditor_addSturdyRef_Params capnp.Struct

// StorageEditor_addSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_addSturdyRef_Params.
const StorageEditor_addSturdyRef_Params_TypeID = 0x9ce5db24f2e15533

func NewStorageEditor_addSturdyRef_Params(s *capnp.Segment) (StorageEditor_addSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_addSturdyRef_Params(st), err
}

func NewRootStorageEditor_addSturdyRef_Params(s *capnp.Segment) (StorageEditor_addSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_addSturdyRef_Params(st), err
}

func ReadRootStorageEditor_addSturdyRef_Params(msg *capnp.Message) (StorageEditor_addSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_addSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_addSturdyRef_Params) String() string {
	str, _ := text.Marshal(0x9ce5db24f2e15533, capnp.Struct(s))
	return str
}

func (s StorageEditor_addSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_addSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_addSturdyRef_Params {
	return StorageEditor_addSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_addSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_addSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_addSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_addSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_addSturdyRef_Params) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageEditor_addSturdyRef_Params) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_addSturdyRef_Params) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageEditor_addSturdyRef_Params) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageEditor_addSturdyRef_Params_List is a list of StorageEditor_addSturdyRef_Params.
type StorageEditor_addSturdyRef_Params_List = capnp.StructList[StorageEditor_addSturdyRef_Params]

// NewStorageEditor_addSturdyRef_Params creates a new list of StorageEditor_addSturdyRef_Params.
func NewStorageEditor_addSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_addSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_addSturdyRef_Params](l), err
}

// StorageEditor_addSturdyRef_Params_Future is a wrapper for a StorageEditor_addSturdyRef_Params promised by a client call.
type StorageEditor_addSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_addSturdyRef_Params_Future) Struct() (StorageEditor_addSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_addSturdyRef_Params(p.Struct()), err
}
func (p StorageEditor_addSturdyRef_Params_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

type StorageEditor_addSturdyRef_Results capnp.Struct

// StorageEditor_addSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_addSturdyRef_Results.
const StorageEditor_addSturdyRef_Results_TypeID = 0xcdd7d69aee2dada4

func NewStorageEditor_addSturdyRef_Results(s *capnp.Segment) (StorageEditor_addSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(st), err
}

func NewRootStorageEditor_addSturdyRef_Results(s *capnp.Segment) (StorageEditor_addSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_addSturdyRef_Results(st), err
}

func ReadRootStorageEditor_addSturdyRef_Results(msg *capnp.Message) (StorageEditor_addSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_addSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_addSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xcdd7d69aee2dada4, capnp.Struct(s))
	return str
}

func (s StorageEditor_addSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_addSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_addSturdyRef_Results {
	return StorageEditor_addSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_addSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_addSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_addSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_addSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_addSturdyRef_Results_List is a list of StorageEditor_addSturdyRef_Results.
type StorageEditor_addSturdyRef_Results_List = capnp.StructList[StorageEditor_addSturdyRef_Results]

// NewStorageEditor_addSturdyRef_Results creates a new list of StorageEditor_addSturdyRef_Results.
func NewStorageEditor_addSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_addSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_addSturdyRef_Results](l), err
}

// StorageEditor_addSturdyRef_Results_Future is a wrapper for a StorageEditor_addSturdyRef_Results promised by a client call.
type StorageEditor_addSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_addSturdyRef_Results_Future) Struct() (StorageEditor_addSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_addSturdyRef_Results(p.Struct()), err
}

type StorageEditor_getSturdyRef_Params capnp.Struct

// StorageEditor_getSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_getSturdyRef_Params.
const StorageEditor_getSturdyRef_Params_TypeID = 0x968c9bfbc19ef7b4

func NewStorageEditor_getSturdyRef_Params(s *capnp.Segment) (StorageEditor_getSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Params(st), err
}

func NewRootStorageEditor_getSturdyRef_Params(s *capnp.Segment) (StorageEditor_getSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Params(st), err
}

func ReadRootStorageEditor_getSturdyRef_Params(msg *capnp.Message) (StorageEditor_getSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_getSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_getSturdyRef_Params) String() string {
	str, _ := text.Marshal(0x968c9bfbc19ef7b4, capnp.Struct(s))
	return str
}

func (s StorageEditor_getSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_getSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_getSturdyRef_Params {
	return StorageEditor_getSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_getSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_getSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_getSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_getSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_getSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_getSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_getSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_getSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_getSturdyRef_Params_List is a list of StorageEditor_getSturdyRef_Params.
type StorageEditor_getSturdyRef_Params_List = capnp.StructList[StorageEditor_getSturdyRef_Params]

// NewStorageEditor_getSturdyRef_Params creates a new list of StorageEditor_getSturdyRef_Params.
func NewStorageEditor_getSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_getSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_getSturdyRef_Params](l), err
}

// StorageEditor_getSturdyRef_Params_Future is a wrapper for a StorageEditor_getSturdyRef_Params promised by a client call.
type StorageEditor_getSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_getSturdyRef_Params_Future) Struct() (StorageEditor_getSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_getSturdyRef_Params(p.Struct()), err
}

type StorageEditor_getSturdyRef_Results capnp.Struct

// StorageEditor_getSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_getSturdyRef_Results.
const StorageEditor_getSturdyRef_Results_TypeID = 0xe509643d47807c2d

func NewStorageEditor_getSturdyRef_Results(s *capnp.Segment) (StorageEditor_getSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(st), err
}

func NewRootStorageEditor_getSturdyRef_Results(s *capnp.Segment) (StorageEditor_getSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_getSturdyRef_Results(st), err
}

func ReadRootStorageEditor_getSturdyRef_Results(msg *capnp.Message) (StorageEditor_getSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_getSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_getSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xe509643d47807c2d, capnp.Struct(s))
	return str
}

func (s StorageEditor_getSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_getSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_getSturdyRef_Results {
	return StorageEditor_getSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_getSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_getSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_getSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_getSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_getSturdyRef_Results) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageEditor_getSturdyRef_Results) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_getSturdyRef_Results) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageEditor_getSturdyRef_Results) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageEditor_getSturdyRef_Results_List is a list of StorageEditor_getSturdyRef_Results.
type StorageEditor_getSturdyRef_Results_List = capnp.StructList[StorageEditor_getSturdyRef_Results]

// NewStorageEditor_getSturdyRef_Results creates a new list of StorageEditor_getSturdyRef_Results.
func NewStorageEditor_getSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_getSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_getSturdyRef_Results](l), err
}

// StorageEditor_getSturdyRef_Results_Future is a wrapper for a StorageEditor_getSturdyRef_Results promised by a client call.
type StorageEditor_getSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_getSturdyRef_Results_Future) Struct() (StorageEditor_getSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_getSturdyRef_Results(p.Struct()), err
}
func (p StorageEditor_getSturdyRef_Results_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

type StorageEditor_listSturdyRefsForUser_Params capnp.Struct

// StorageEditor_listSturdyRefsForUser_Params_TypeID is the unique identifier for the type StorageEditor_listSturdyRefsForUser_Params.
const StorageEditor_listSturdyRefsForUser_Params_TypeID = 0xadb20e7070609f45

func NewStorageEditor_listSturdyRefsForUser_Params(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Params(st), err
}

func NewRootStorageEditor_listSturdyRefsForUser_Params(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Params(st), err
}

func ReadRootStorageEditor_listSturdyRefsForUser_Params(msg *capnp.Message) (StorageEditor_listSturdyRefsForUser_Params, error) {
	root, err := msg.Root()
	return StorageEditor_listSturdyRefsForUser_Params(root.Struct()), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) String() string {
	str, _ := text.Marshal(0xadb20e7070609f45, capnp.Struct(s))
	return str
}

func (s StorageEditor_listSturdyRefsForUser_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listSturdyRefsForUser_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_listSturdyRefsForUser_Params {
	return StorageEditor_listSturdyRefsForUser_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listSturdyRefsForUser_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listSturdyRefsForUser_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listSturdyRefsForUser_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listSturdyRefsForUser_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listSturdyRefsForUser_Params) Usersignature() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) HasUsersignature() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listSturdyRefsForUser_Params) UsersignatureBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_listSturdyRefsForUser_Params) SetUsersignature(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_listSturdyRefsForUser_Params_List is a list of StorageEditor_listSturdyRefsForUser_Params.
type StorageEditor_listSturdyRefsForUser_Params_List = capnp.StructList[StorageEditor_listSturdyRefsForUser_Params]

// NewStorageEditor_listSturdyRefsForUser_Params creates a new list of StorageEditor_listSturdyRefsForUser_Params.
func NewStorageEditor_listSturdyRefsForUser_Params_List(s *capnp.Segment, sz int32) (StorageEditor_listSturdyRefsForUser_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listSturdyRefsForUser_Params](l), err
}

// StorageEditor_listSturdyRefsForUser_Params_Future is a wrapper for a StorageEditor_listSturdyRefsForUser_Params promised by a client call.
type StorageEditor_listSturdyRefsForUser_Params_Future struct{ *capnp.Future }

func (f StorageEditor_listSturdyRefsForUser_Params_Future) Struct() (StorageEditor_listSturdyRefsForUser_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listSturdyRefsForUser_Params(p.Struct()), err
}

type StorageEditor_listSturdyRefsForUser_Results capnp.Struct

// StorageEditor_listSturdyRefsForUser_Results_TypeID is the unique identifier for the type StorageEditor_listSturdyRefsForUser_Results.
const StorageEditor_listSturdyRefsForUser_Results_TypeID = 0xfa55621a4bbb397a

func NewStorageEditor_listSturdyRefsForUser_Results(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(st), err
}

func NewRootStorageEditor_listSturdyRefsForUser_Results(s *capnp.Segment) (StorageEditor_listSturdyRefsForUser_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listSturdyRefsForUser_Results(st), err
}

func ReadRootStorageEditor_listSturdyRefsForUser_Results(msg *capnp.Message) (StorageEditor_listSturdyRefsForUser_Results, error) {
	root, err := msg.Root()
	return StorageEditor_listSturdyRefsForUser_Results(root.Struct()), err
}

func (s StorageEditor_listSturdyRefsForUser_Results) String() string {
	str, _ := text.Marshal(0xfa55621a4bbb397a, capnp.Struct(s))
	return str
}

func (s StorageEditor_listSturdyRefsForUser_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listSturdyRefsForUser_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_listSturdyRefsForUser_Results {
	return StorageEditor_listSturdyRefsForUser_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listSturdyRefsForUser_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listSturdyRefsForUser_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listSturdyRefsForUser_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listSturdyRefsForUser_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listSturdyRefsForUser_Results) Sturdyrefs() (SturdyRefStored_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored_List(p.List()), err
}

func (s StorageEditor_listSturdyRefsForUser_Results) HasSturdyrefs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listSturdyRefsForUser_Results) SetSturdyrefs(v SturdyRefStored_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSturdyrefs sets the sturdyrefs field to a newly
// allocated SturdyRefStored_List, preferring placement in s's segment.
func (s StorageEditor_listSturdyRefsForUser_Results) NewSturdyrefs(n int32) (SturdyRefStored_List, error) {
	l, err := NewSturdyRefStored_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return SturdyRefStored_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// StorageEditor_listSturdyRefsForUser_Results_List is a list of StorageEditor_listSturdyRefsForUser_Results.
type StorageEditor_listSturdyRefsForUser_Results_List = capnp.StructList[StorageEditor_listSturdyRefsForUser_Results]

// NewStorageEditor_listSturdyRefsForUser_Results creates a new list of StorageEditor_listSturdyRefsForUser_Results.
func NewStorageEditor_listSturdyRefsForUser_Results_List(s *capnp.Segment, sz int32) (StorageEditor_listSturdyRefsForUser_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listSturdyRefsForUser_Results](l), err
}

// StorageEditor_listSturdyRefsForUser_Results_Future is a wrapper for a StorageEditor_listSturdyRefsForUser_Results promised by a client call.
type StorageEditor_listSturdyRefsForUser_Results_Future struct{ *capnp.Future }

func (f StorageEditor_listSturdyRefsForUser_Results_Future) Struct() (StorageEditor_listSturdyRefsForUser_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listSturdyRefsForUser_Results(p.Struct()), err
}

type StorageEditor_listAllSturdyRefs_Params capnp.Struct

// StorageEditor_listAllSturdyRefs_Params_TypeID is the unique identifier for the type StorageEditor_listAllSturdyRefs_Params.
const StorageEditor_listAllSturdyRefs_Params_TypeID = 0xa518a153042139c8

func NewStorageEditor_listAllSturdyRefs_Params(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_listAllSturdyRefs_Params(st), err
}

func NewRootStorageEditor_listAllSturdyRefs_Params(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_listAllSturdyRefs_Params(st), err
}

func ReadRootStorageEditor_listAllSturdyRefs_Params(msg *capnp.Message) (StorageEditor_listAllSturdyRefs_Params, error) {
	root, err := msg.Root()
	return StorageEditor_listAllSturdyRefs_Params(root.Struct()), err
}

func (s StorageEditor_listAllSturdyRefs_Params) String() string {
	str, _ := text.Marshal(0xa518a153042139c8, capnp.Struct(s))
	return str
}

func (s StorageEditor_listAllSturdyRefs_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listAllSturdyRefs_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_listAllSturdyRefs_Params {
	return StorageEditor_listAllSturdyRefs_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listAllSturdyRefs_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listAllSturdyRefs_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listAllSturdyRefs_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listAllSturdyRefs_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_listAllSturdyRefs_Params_List is a list of StorageEditor_listAllSturdyRefs_Params.
type StorageEditor_listAllSturdyRefs_Params_List = capnp.StructList[StorageEditor_listAllSturdyRefs_Params]

// NewStorageEditor_listAllSturdyRefs_Params creates a new list of StorageEditor_listAllSturdyRefs_Params.
func NewStorageEditor_listAllSturdyRefs_Params_List(s *capnp.Segment, sz int32) (StorageEditor_listAllSturdyRefs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_listAllSturdyRefs_Params](l), err
}

// StorageEditor_listAllSturdyRefs_Params_Future is a wrapper for a StorageEditor_listAllSturdyRefs_Params promised by a client call.
type StorageEditor_listAllSturdyRefs_Params_Future struct{ *capnp.Future }

func (f StorageEditor_listAllSturdyRefs_Params_Future) Struct() (StorageEditor_listAllSturdyRefs_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listAllSturdyRefs_Params(p.Struct()), err
}

type StorageEditor_listAllSturdyRefs_Results capnp.Struct

// StorageEditor_listAllSturdyRefs_Results_TypeID is the unique identifier for the type StorageEditor_listAllSturdyRefs_Results.
const StorageEditor_listAllSturdyRefs_Results_TypeID = 0x9248a5211394ad54

func NewStorageEditor_listAllSturdyRefs_Results(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(st), err
}

func NewRootStorageEditor_listAllSturdyRefs_Results(s *capnp.Segment) (StorageEditor_listAllSturdyRefs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_listAllSturdyRefs_Results(st), err
}

func ReadRootStorageEditor_listAllSturdyRefs_Results(msg *capnp.Message) (StorageEditor_listAllSturdyRefs_Results, error) {
	root, err := msg.Root()
	return StorageEditor_listAllSturdyRefs_Results(root.Struct()), err
}

func (s StorageEditor_listAllSturdyRefs_Results) String() string {
	str, _ := text.Marshal(0x9248a5211394ad54, capnp.Struct(s))
	return str
}

func (s StorageEditor_listAllSturdyRefs_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_listAllSturdyRefs_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_listAllSturdyRefs_Results {
	return StorageEditor_listAllSturdyRefs_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_listAllSturdyRefs_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_listAllSturdyRefs_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_listAllSturdyRefs_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_listAllSturdyRefs_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_listAllSturdyRefs_Results) Sturdyrefs() (SturdyRefStored_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored_List(p.List()), err
}

func (s StorageEditor_listAllSturdyRefs_Results) HasSturdyrefs() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_listAllSturdyRefs_Results) SetSturdyrefs(v SturdyRefStored_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSturdyrefs sets the sturdyrefs field to a newly
// allocated SturdyRefStored_List, preferring placement in s's segment.
func (s StorageEditor_listAllSturdyRefs_Results) NewSturdyrefs(n int32) (SturdyRefStored_List, error) {
	l, err := NewSturdyRefStored_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return SturdyRefStored_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// StorageEditor_listAllSturdyRefs_Results_List is a list of StorageEditor_listAllSturdyRefs_Results.
type StorageEditor_listAllSturdyRefs_Results_List = capnp.StructList[StorageEditor_listAllSturdyRefs_Results]

// NewStorageEditor_listAllSturdyRefs_Results creates a new list of StorageEditor_listAllSturdyRefs_Results.
func NewStorageEditor_listAllSturdyRefs_Results_List(s *capnp.Segment, sz int32) (StorageEditor_listAllSturdyRefs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_listAllSturdyRefs_Results](l), err
}

// StorageEditor_listAllSturdyRefs_Results_Future is a wrapper for a StorageEditor_listAllSturdyRefs_Results promised by a client call.
type StorageEditor_listAllSturdyRefs_Results_Future struct{ *capnp.Future }

func (f StorageEditor_listAllSturdyRefs_Results_Future) Struct() (StorageEditor_listAllSturdyRefs_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_listAllSturdyRefs_Results(p.Struct()), err
}

type StorageEditor_deleteSturdyRef_Params capnp.Struct

// StorageEditor_deleteSturdyRef_Params_TypeID is the unique identifier for the type StorageEditor_deleteSturdyRef_Params.
const StorageEditor_deleteSturdyRef_Params_TypeID = 0xf4b2adaeac2fc134

func NewStorageEditor_deleteSturdyRef_Params(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_deleteSturdyRef_Params(st), err
}

func NewRootStorageEditor_deleteSturdyRef_Params(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageEditor_deleteSturdyRef_Params(st), err
}

func ReadRootStorageEditor_deleteSturdyRef_Params(msg *capnp.Message) (StorageEditor_deleteSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageEditor_deleteSturdyRef_Params(root.Struct()), err
}

func (s StorageEditor_deleteSturdyRef_Params) String() string {
	str, _ := text.Marshal(0xf4b2adaeac2fc134, capnp.Struct(s))
	return str
}

func (s StorageEditor_deleteSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_deleteSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageEditor_deleteSturdyRef_Params {
	return StorageEditor_deleteSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_deleteSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_deleteSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_deleteSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_deleteSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageEditor_deleteSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageEditor_deleteSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageEditor_deleteSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageEditor_deleteSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageEditor_deleteSturdyRef_Params_List is a list of StorageEditor_deleteSturdyRef_Params.
type StorageEditor_deleteSturdyRef_Params_List = capnp.StructList[StorageEditor_deleteSturdyRef_Params]

// NewStorageEditor_deleteSturdyRef_Params creates a new list of StorageEditor_deleteSturdyRef_Params.
func NewStorageEditor_deleteSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageEditor_deleteSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageEditor_deleteSturdyRef_Params](l), err
}

// StorageEditor_deleteSturdyRef_Params_Future is a wrapper for a StorageEditor_deleteSturdyRef_Params promised by a client call.
type StorageEditor_deleteSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageEditor_deleteSturdyRef_Params_Future) Struct() (StorageEditor_deleteSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_deleteSturdyRef_Params(p.Struct()), err
}

type StorageEditor_deleteSturdyRef_Results capnp.Struct

// StorageEditor_deleteSturdyRef_Results_TypeID is the unique identifier for the type StorageEditor_deleteSturdyRef_Results.
const StorageEditor_deleteSturdyRef_Results_TypeID = 0x8bfbf4be38627800

func NewStorageEditor_deleteSturdyRef_Results(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(st), err
}

func NewRootStorageEditor_deleteSturdyRef_Results(s *capnp.Segment) (StorageEditor_deleteSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return StorageEditor_deleteSturdyRef_Results(st), err
}

func ReadRootStorageEditor_deleteSturdyRef_Results(msg *capnp.Message) (StorageEditor_deleteSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageEditor_deleteSturdyRef_Results(root.Struct()), err
}

func (s StorageEditor_deleteSturdyRef_Results) String() string {
	str, _ := text.Marshal(0x8bfbf4be38627800, capnp.Struct(s))
	return str
}

func (s StorageEditor_deleteSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageEditor_deleteSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageEditor_deleteSturdyRef_Results {
	return StorageEditor_deleteSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageEditor_deleteSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageEditor_deleteSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageEditor_deleteSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageEditor_deleteSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// StorageEditor_deleteSturdyRef_Results_List is a list of StorageEditor_deleteSturdyRef_Results.
type StorageEditor_deleteSturdyRef_Results_List = capnp.StructList[StorageEditor_deleteSturdyRef_Results]

// NewStorageEditor_deleteSturdyRef_Results creates a new list of StorageEditor_deleteSturdyRef_Results.
func NewStorageEditor_deleteSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageEditor_deleteSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[StorageEditor_deleteSturdyRef_Results](l), err
}

// StorageEditor_deleteSturdyRef_Results_Future is a wrapper for a StorageEditor_deleteSturdyRef_Results promised by a client call.
type StorageEditor_deleteSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageEditor_deleteSturdyRef_Results_Future) Struct() (StorageEditor_deleteSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageEditor_deleteSturdyRef_Results(p.Struct()), err
}

type StorageReader capnp.Client

// StorageReader_TypeID is the unique identifier for the type StorageReader.
const StorageReader_TypeID = 0xeb1ed22a5561aae3

func (c StorageReader) GetSturdyRef(ctx context.Context, params func(StorageReader_getSturdyRef_Params) error) (StorageReader_getSturdyRef_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xeb1ed22a5561aae3,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageReader",
			MethodName:    "getSturdyRef",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(StorageReader_getSturdyRef_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return StorageReader_getSturdyRef_Results_Future{Future: ans.Future()}, release

}

func (c StorageReader) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c StorageReader) String() string {
	return "StorageReader(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c StorageReader) AddRef() StorageReader {
	return StorageReader(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c StorageReader) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c StorageReader) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c StorageReader) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (StorageReader) DecodeFromPtr(p capnp.Ptr) StorageReader {
	return StorageReader(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c StorageReader) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c StorageReader) IsSame(other StorageReader) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c StorageReader) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c StorageReader) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A StorageReader_Server is a StorageReader with a local implementation.
type StorageReader_Server interface {
	GetSturdyRef(context.Context, StorageReader_getSturdyRef) error
}

// StorageReader_NewServer creates a new Server from an implementation of StorageReader_Server.
func StorageReader_NewServer(s StorageReader_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(StorageReader_Methods(nil, s), s, c)
}

// StorageReader_ServerToClient creates a new Client from an implementation of StorageReader_Server.
// The caller is responsible for calling Release on the returned Client.
func StorageReader_ServerToClient(s StorageReader_Server) StorageReader {
	return StorageReader(capnp.NewClient(StorageReader_NewServer(s)))
}

// StorageReader_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func StorageReader_Methods(methods []server.Method, s StorageReader_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xeb1ed22a5561aae3,
			MethodID:      0,
			InterfaceName: "storage.capnp:StorageReader",
			MethodName:    "getSturdyRef",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSturdyRef(ctx, StorageReader_getSturdyRef{call})
		},
	})

	return methods
}

// StorageReader_getSturdyRef holds the state for a server call to StorageReader.getSturdyRef.
// See server.Call for documentation.
type StorageReader_getSturdyRef struct {
	*server.Call
}

// Args returns the call's arguments.
func (c StorageReader_getSturdyRef) Args() StorageReader_getSturdyRef_Params {
	return StorageReader_getSturdyRef_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c StorageReader_getSturdyRef) AllocResults() (StorageReader_getSturdyRef_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(r), err
}

// StorageReader_List is a list of StorageReader.
type StorageReader_List = capnp.CapList[StorageReader]

// NewStorageReader_List creates a new list of StorageReader.
func NewStorageReader_List(s *capnp.Segment, sz int32) (StorageReader_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[StorageReader](l), err
}

type StorageReader_getSturdyRef_Params capnp.Struct

// StorageReader_getSturdyRef_Params_TypeID is the unique identifier for the type StorageReader_getSturdyRef_Params.
const StorageReader_getSturdyRef_Params_TypeID = 0xa478d6877d52b582

func NewStorageReader_getSturdyRef_Params(s *capnp.Segment) (StorageReader_getSturdyRef_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Params(st), err
}

func NewRootStorageReader_getSturdyRef_Params(s *capnp.Segment) (StorageReader_getSturdyRef_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Params(st), err
}

func ReadRootStorageReader_getSturdyRef_Params(msg *capnp.Message) (StorageReader_getSturdyRef_Params, error) {
	root, err := msg.Root()
	return StorageReader_getSturdyRef_Params(root.Struct()), err
}

func (s StorageReader_getSturdyRef_Params) String() string {
	str, _ := text.Marshal(0xa478d6877d52b582, capnp.Struct(s))
	return str
}

func (s StorageReader_getSturdyRef_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageReader_getSturdyRef_Params) DecodeFromPtr(p capnp.Ptr) StorageReader_getSturdyRef_Params {
	return StorageReader_getSturdyRef_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageReader_getSturdyRef_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageReader_getSturdyRef_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageReader_getSturdyRef_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageReader_getSturdyRef_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageReader_getSturdyRef_Params) SturdyRefID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s StorageReader_getSturdyRef_Params) HasSturdyRefID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageReader_getSturdyRef_Params) SturdyRefIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s StorageReader_getSturdyRef_Params) SetSturdyRefID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// StorageReader_getSturdyRef_Params_List is a list of StorageReader_getSturdyRef_Params.
type StorageReader_getSturdyRef_Params_List = capnp.StructList[StorageReader_getSturdyRef_Params]

// NewStorageReader_getSturdyRef_Params creates a new list of StorageReader_getSturdyRef_Params.
func NewStorageReader_getSturdyRef_Params_List(s *capnp.Segment, sz int32) (StorageReader_getSturdyRef_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageReader_getSturdyRef_Params](l), err
}

// StorageReader_getSturdyRef_Params_Future is a wrapper for a StorageReader_getSturdyRef_Params promised by a client call.
type StorageReader_getSturdyRef_Params_Future struct{ *capnp.Future }

func (f StorageReader_getSturdyRef_Params_Future) Struct() (StorageReader_getSturdyRef_Params, error) {
	p, err := f.Future.Ptr()
	return StorageReader_getSturdyRef_Params(p.Struct()), err
}

type StorageReader_getSturdyRef_Results capnp.Struct

// StorageReader_getSturdyRef_Results_TypeID is the unique identifier for the type StorageReader_getSturdyRef_Results.
const StorageReader_getSturdyRef_Results_TypeID = 0xd0dff216087c0481

func NewStorageReader_getSturdyRef_Results(s *capnp.Segment) (StorageReader_getSturdyRef_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(st), err
}

func NewRootStorageReader_getSturdyRef_Results(s *capnp.Segment) (StorageReader_getSturdyRef_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return StorageReader_getSturdyRef_Results(st), err
}

func ReadRootStorageReader_getSturdyRef_Results(msg *capnp.Message) (StorageReader_getSturdyRef_Results, error) {
	root, err := msg.Root()
	return StorageReader_getSturdyRef_Results(root.Struct()), err
}

func (s StorageReader_getSturdyRef_Results) String() string {
	str, _ := text.Marshal(0xd0dff216087c0481, capnp.Struct(s))
	return str
}

func (s StorageReader_getSturdyRef_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (StorageReader_getSturdyRef_Results) DecodeFromPtr(p capnp.Ptr) StorageReader_getSturdyRef_Results {
	return StorageReader_getSturdyRef_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s StorageReader_getSturdyRef_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s StorageReader_getSturdyRef_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s StorageReader_getSturdyRef_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s StorageReader_getSturdyRef_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s StorageReader_getSturdyRef_Results) Sturdyref() (SturdyRefStored, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return SturdyRefStored(p.Struct()), err
}

func (s StorageReader_getSturdyRef_Results) HasSturdyref() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s StorageReader_getSturdyRef_Results) SetSturdyref(v SturdyRefStored) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewSturdyref sets the sturdyref field to a newly
// allocated SturdyRefStored struct, preferring placement in s's segment.
func (s StorageReader_getSturdyRef_Results) NewSturdyref() (SturdyRefStored, error) {
	ss, err := NewSturdyRefStored(capnp.Struct(s).Segment())
	if err != nil {
		return SturdyRefStored{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// StorageReader_getSturdyRef_Results_List is a list of StorageReader_getSturdyRef_Results.
type StorageReader_getSturdyRef_Results_List = capnp.StructList[StorageReader_getSturdyRef_Results]

// NewStorageReader_getSturdyRef_Results creates a new list of StorageReader_getSturdyRef_Results.
func NewStorageReader_getSturdyRef_Results_List(s *capnp.Segment, sz int32) (StorageReader_getSturdyRef_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[StorageReader_getSturdyRef_Results](l), err
}

// StorageReader_getSturdyRef_Results_Future is a wrapper for a StorageReader_getSturdyRef_Results promised by a client call.
type StorageReader_getSturdyRef_Results_Future struct{ *capnp.Future }

func (f StorageReader_getSturdyRef_Results_Future) Struct() (StorageReader_getSturdyRef_Results, error) {
	p, err := f.Future.Ptr()
	return StorageReader_getSturdyRef_Results(p.Struct()), err
}
func (p StorageReader_getSturdyRef_Results_Future) Sturdyref() SturdyRefStored_Future {
	return SturdyRefStored_Future{Future: p.Future.Field(0, nil)}
}

const schema_dca555fc76741dc1 = "x\xda\xacX\x7fl\x13\xd7\x1d\xff~\xef\xec\\\x1c\xc7" +
	"v\x8e\x0b]\xd9\xa0^$\x98`\"\xac\xa8E\x90\x0e" +
	"\x94\xb0&M\xd3\xad4\xe7\xe0J\xad\x04\xeb%~\xc9" +
	"\x8e:\xd8\xdc\x9d\x09\xae`\xa3\xa9\xc6\x06\x1b\xd5\xcaX" +
	";\x18\xda\x06k\xb4\x8e.\x9b\x16\x0d\xa9-\xa3\x12\xd3" +
	"Z`\x0aj\x85\xd6T@\xa7\x95t\xacc\x83\xad\xcd" +
	"\xbaQZ\xda\x9b\xde;?\xfbl\x9f\xc1\xa9\xf8\xcf~" +
	"\xef\xfb\xbe?>\xdf\xdfw\xebs\xfe6\xdf\xe2\xd0P" +
	"\x18\x04\xf5\x19\x7f\x8d=v\xf6\xca*a\xc6\x0f\xb7\x82" +
	"\x1cE\x00?J\x00\xb75I\x93\x08\xa8,\x91Z\x01" +
	"\xed\xe3o\xfem\xeb\xec\xa1\x8b\xdf\x04\xf9\x16\x04\xf0\xd1" +
	"\xfb\xb84\x86\xe0\xfbxS\xef\xb2\x17\xdf\xfb\xf0;\xf2" +
	"l~\xde!\x1d@\xf0\xd9\xabGw+M#w\xef" +
	"\x02v\xe3\xb0\\B\x9f\xa0\xd2\xc1X\xb6\xad]\xd7\xbd" +
	"m\xf9\x9e\xdd\x0eK\x87 +\x1d\xa4\x04\xdb\x19\x81\xb4" +
	"\xeb\xee=\xdb\x97\xfen\xb7[\xa9Q\xe9\x0c%8\xca" +
	"\x08~{\xf9\xc7G?\xfc\xd1w\x9ft\x8b8/\x0d" +
	"S\x82w\x19\xc1\xc5\xc7/\x1dx\xf1L\xfa)\x90\xc3" +
	"\xa2}t\x8e\xb5\xf1j|\xe4\x0d\x00Tf\xd6N*" +
	"M\xb5\x94~Nm'*\x18\x90\x00\xec\xdb\xe2\xe7\xa6" +
	"\xe6\x9e=\xbf\xcf\xcd\xeeB-c\xf7\xdfZ\xca\xees" +
	"\xc1\x0dW'j\x9e\xff\xa9[\xa1Y\x81?R\x82\xe6" +
	"\x00%P\xae\x1a\x7fmyll?\x93\xa7\xddt\xe8" +
	"\xb9O\x9d>\xfc:\x95\x17\x0fL)\x1a\x15\xa2\xac\x09" +
	"t*;\x99\xb8\xe1C\xb1-\xdf\x9a\xd8\xf4\xb4[\\" +
	"&\xc0\xc4=\xca\xb8\xad\xdd\xf9\xca}\xef\x9c\xdcVD" +
	"0\x12\xd8E\x09\x0e1\x82\xe3-M\xbe\x9e\xfd7\x8f" +
	"@\x01\xfc\xd3\x81\x83\x14\xfc\xa5\xf6\x17/\xce_~b" +
	"\xc4\xd1\x94\xdd\x9cpn~\xfd\xc0\xf8\xe9\xce\xa6W~" +
	"\xee\xb6\xe1\xf9\x00s\xcb\x09\xc6\xf4\x1f+\xbe\xffl\x8b" +
	"\xef\xc1g\xddR/\x05vP\x82\x8f\x18A\xc7O\x1e" +
	"J\xa7\xc3c\xa3n\x82\xc5u\x0c\x85\x8e:J\xf0\xd5" +
	"\xf6\xf1\xe4\xbeY_\xff\x0d\xc8a,\xa0\xe0gZ\xe8" +
	"uu\xa8d\xeb(\x12\x99\xba\xb7\x01\xed\x03J\xf4\x9d" +
	"9\x13\x81Cn}\xd6\x04\x7fO\xb9\x0d\x06)\xb7\xcb" +
	"\xdbv\xccz\xf2\xbe\x17^v\x8b\xdb\x19d0\xeda" +
	"\x04O\x8f6\xffk\xef\xc4\xeb'](\x1c\x09\xee\xa0" +
	"\xb6>\xea\xdb\\{\xd3\xd4_^u?\x1d\x0d2S" +
	"\x8e\xb0\xa7w\xfe\xfb\xd8\x0ff\xafz\xebU\xa6i>" +
	">\x98\xa6\xca\xb9\xe0\x94r)H\x7f]\x08RE\xbb" +
	"\x1e\xfbYl\xfc\xef/\x9d)\xb1J`\xd8\xd6\xdf\x81" +
	"\xca\xe9zJ\xfcZ\xfd\x10\xa0\xdd9|\xaf4^\xb3" +
	"\xf6\xac;\xb6\x97\x84\x98U\x1d!*Y\x9fx\xff{" +
	"\x89\x97?>[\x16)\x83\xa1\x0f\x94l\x88\xe1\x13:" +
	"\xa6`\x98F\xca\xe4\xeae\xf1\x85\x9f]\xfag7\xb7" +
	"\x0b\xa1\x17(\xb7+\x8c\xdb\x1f\xfc\xd17\xd6\x9c\x12\xdf" +
	",\xe36+<\xa9\xcc\xa3<\x94\xa6\xf01\xe5\x17\x8c" +
	"[\xf3\xe6\xad\x9d+\x12\x81\xf3nT\x9e\x083T\xf6" +
	"\x87)\xb7\xc7\x0f\x9fyxf\xf6\xf2\xdbn\x82\x97\xc2" +
	"{)\xc1k\x8c\xe0\xad\x83Z\xfc\xf3\xa7n\xf9gY" +
	"Z]\x09O*\xfe\x08\x15\x87\x91N\xa5\x99\xfe\xb2o" +
	"?\xfa\x85_\xfejt\xec=7\xb7\x99\x11\xc6m^" +
	"\x84r\x1b\xffS\xf8\x9e\xe0g\x86\xffW\xa6|Wd" +
	"J\x893nj\xa4S\xd9\xc2\xb8\xfd\xe7\xa9#\x8b\x17" +
	"\x86\xfd\xef\xbb\xb9\x91\x08\x0b\xbe,\xe3\xf6H\xcb\xe1/" +
	"\x7f\xba7\xfe\x81\x9b`O\xe4\x14%\x18e\x04\xfb&" +
	"\xe6\x06\x8e?s\xf2\xa3\x1c\x01\xf3\xdf\xb9\x08s\xcd\xbb" +
	"\x91!Xf\x9bimh=1\x16\xd5\xf4i\xe9\xf5" +
	"\xe9;z\x88\xb1Q\xef#\xabS=\xb9\xf3\x01b\xc5" +
	"\x88\x99Jn\xd4z\x93\xa4[\xcb&SZbn\x8c" +
	"\x98\x19)i\x99\xaaO\xf4\x01\xf8\x10@\x0e}\x09@" +
	"\xad\x15Qm\x14\xf0\x1bi\x87\x0e\xebA\xc0z\xc0\xbc" +
	"\x10\x7f\x91\x90\x18\x19\xd0M\xcb\xc8.2\xd8\x0fb\xe4" +
	"\xce\xe7\xc6H\xd4\xcc$-\xd36\xad\x94\xa1\x0d\x90\xfc" +
	";\xe7oGB\xb7R\xc6\xa2\x04I\x12\x8b\xf4X\x19" +
	"#\x91\x8d\x91\xfe\xbcR\xd7~\x95\xd4Mke2\x99" +
	"\x7ff\xe6\xa5\xb9\x8dy\x10@\xad\x17Q\x9d/\xa0m" +
	"2R\x83\x80\xd8ob\x18\xb0[Dl($\x13 " +
	"=\x9c\xae\x89\xddZ\xc4\xd0\x06\x8bd\xae\xcb\xc9\xbc\x99" +
	"\xca\xcc\xb9\x01\"\xa9\x87\xc9\xfa2\x1c\xa7\xe5\xacn\xcd" +
	"\xd0\xc4bQ\x86[T\x9a\xf4\xe9\xfdz\x1fD5K" +
	"O\xb9d]\x0b\xc5\x01b\x15\x80\xa7\x02\x06Mp\x0b" +
	"\xe8u\x0b\xc8\x11\x82\xd4\xdf\xd5^\xc6^(e/Y" +
	")\xa3\x1bQm\x14\xfd\xae.\x85\xbc\xee\xc9O\xac\x03" +
	"A\xde.a\xa1!\"\xcfqy\x0b\xbd\xcbH(\xe4" +
	"\xcb6\xf2\x0c\x91\xf51\x10d\"\xa1\x98o$\xc8\x9b" +
	"\xb6\xfc\xc0.\x10\xe4\xb8\x84\xbe|\xfe\"\xf0N\xdf5" +
	"\x0c\x82\xbcR\xb2\xb5D\x82\x99\x0c\x11jt\x1b\xda\x1c" +
	"\x83\xfc\x01\x0d-z\x82N`\xdd\x95\x8a\x1aq\x93\x18" +
	"\xb9\x1b\x1at\xc81C\xb3\x0dm\x1e\xc0\x98;\x846" +
	"\xec\xc6\xeb\x00\xcf\xb5\xa8\x04|\xac\x0cx\x83\x00\xf6\x97" +
	"\x04lCu\xb1\xf4\x15}#\xb9SKk\xbdzR" +
	"\xb7\xb2,\xc1\x92\x96\x09E\x02\xf7\x02\xa8\x0d\"\xaa\xb3" +
	"\x05\xb4\x0d\x16{$\x81\xfc\x91heq\x86O\x04\xc4" +
	"\x19.\x89BI\x8a\x98Q\xfa\x8a9\xdd\xc7\x9c\xce;" +
	"\x00\xf2\xc6\"\xcb\xd4A!\xc9\xe6J!\xd7\x0a\xb3\xd7" +
	"\x02-F\xb4\x04\xb9!\xd1\xea\x99\xdd\xf7\xebd(\xc7" +
	"\xbep\xe0\x08@\xb3\xa2W\x1c\xd2.\xc0\xf6\xear\xad" +
	"\xbcb\xe5\x8aG\x05\xad\x8a\\X\xac\xd8'z\xe6U" +
	"\x1f{\xcb\x0d\xba\x1f$\x9d\x0cy\xb8\xdb\x133\x96+" +
	"\xce\x89\xe9\x1dX\xf7\xb8Kp\x8e\x12\x00\x0a\x158?" +
	"x\xf1\x0a\x9c\x03\xb1\xa6\x12\x88\x05\x04\xefJ\xb1\xcc\xe4" +
	"\xb1\x00\x95jc\xc6$\x86\xa9\x0f\xac\xa7\xb51c\x90" +
	"\xb2p\x10\x8bLk'f\x9f\xa1\xa7i\x15\x05\xa0\xd1" +
	"\xdc\x90\xe7\xaa\xd1\x08xHD5)\xa0\x8c\xd8\x88\xf4" +
	"P\xa7(~MD\xd5\x12P\x16\x84F\x14\x00\xe4\x0d" +
	"\xf40-\xa2\xbaY@Y\x14\x1bQ\x04\x90\xb34\xcb" +
	"6\x8b\xa8~\xbbR\x00\xf1~!e\xd3\xa4\xf4t\x15" +
	"H\xda`\xd9i;ru\xc5\xd4\xb4:LIU\xf0" +
	"\xc8\xa7\xe9\x8f\x02^Qq\xbdD\xf56\xb9\xea\xe2\x99" +
	"\x0f\xbai\xd4\x0e\xcf@\x9dF\xc9-\xedy9\xbe=" +
	"Q+e\x90DI\xc8\xf4z\x85L\xcc+d(\xde" +
	"I\x11\xd5M\xae\x90\xc9\xd08\xb6DT\xb7V.j" +
	"\xe5\x81T\xe6\xae*3\xa00u\xf0\xaa\xdeJ6d" +
	"\x88iQ\x9bj\xf36-\xa0\xea\xcf\x17Q\xbd\xdde" +
	"\xd3b\xaa\xfeB\x11\xd5eBu:y\xc7\xa8\xa3\xc2" +
	"5\x1b\xd7\x0d\xed[\xabS=\xad\xce\x05\xb5\xb1\x9e5" +
	".\xbe\xde!\xdf\x9de\x956\xae{\xe9\xb4\xc2\x97T" +
	"\xe4;\xa9\xbc\xf2\x11\x10\xe4\x16:\xad\xf0\xdd\x1f\xf9\x97" +
	"\x09\xb9\xf9 \x08\xf2\x82\x0a\x0d\xcf\xe6\x15\x1aZ\x9d\xd4" +
	"q\x8e\x18\x02\xc8g\xbf\x08\xc5,\xd7\x1c+\xcc\xa6\x15" +
	"\x01kur\xafRN\x1b\x8eo\xb1\xa1\xb0&\x96\x0c" +
	"\x15BivKCn\x9c\xf8\x96\x8b|\xfd\x96U:" +
	"\xb9uQ\x9c\xf8w\x00\xe4\x8b\x99\xbc\x82\xe2\xb4\x84\xe2" +
	"\xc4\xb7\x19\xe4\x8b\x91\xbc\x80\xe24O\xb2y\xe5\x80\x08" +
	"\xad\x1d\xd5@\xd4C\x8c\x08U\xae\x8a\xa1\xeb\x86\xd6\x80" +
	"iL\x12L\x94\xf8\x09:\xaf\xe7l\x1d#\x9a\x94p" +
	"\x8fY\xfc\x93\x0c\xf2/\x07\xb2L\xbd\x10\x90\xcaF\xdb" +
	"\xeb\"T\xba\x8by\xec\x1c\xd5\x0fY\xa5\xf3\xe1@\x94" +
	"\xedP\x05\xc5\xf9\xb74\xe4\xdf\xe9dy\xd8Q\x9c\xaf" +
	"Y\x98{\x0c\xc5\x09PS\x01\xf4\xb2\xf2\xe5\xedew" +
	"\x0e\xe4\xb0\xf7\xca\x81\xe9\xcf!\x8e4\xbcA+h\xf5" +
	"V\xf2\x16{\xbd\x0aM{\xc9\xad\"\xaa\xcb+\x8d\x1f" +
	"\xde;\xe4\xff\x03\x00\x00\xff\xff\xa0\x0aS\xb1"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_dca555fc76741dc1,
		Nodes: []uint64{
			0x809812024ef9dbb2,
			0x85ec771c80e6e0c8,
			0x8bfbf4be38627800,
			0x9248a5211394ad54,
			0x94993c86506a5e40,
			0x94bc378999489207,
			0x968c9bfbc19ef7b4,
			0x9770dabea2ed8eec,
			0x9ce5db24f2e15533,
			0xa0b906d6fc710b26,
			0xa1b28339e472fc13,
			0xa478d6877d52b582,
			0xa486cdf04fcf8d5e,
			0xa518a153042139c8,
			0xa5c93c28ec3bff37,
			0xa7cf2147d9cc59af,
			0xab5a0439ab933dea,
			0xadb20e7070609f45,
			0xb17e199c6ccc445f,
			0xb509d61df01f13a2,
			0xc6ba4f96198a86f7,
			0xcdd7d69aee2dada4,
			0xd0dff216087c0481,
			0xd0e34e1c95c7ef43,
			0xdac5e8cc52a38349,
			0xdb5e06cc074d8247,
			0xdbfec66490f8d669,
			0xdd37202c553854e2,
			0xe003d25ddc1f05c4,
			0xe509643d47807c2d,
			0xe7f779156bdabb8e,
			0xeb1ed22a5561aae3,
			0xf4b2adaeac2fc134,
			0xf6821b0b4a0ed4cc,
			0xf8050e2c31bd97f3,
			0xfa55621a4bbb397a,
			0xfdcda8c80924d69c,
		},
		Compressed: true,
	})
}
